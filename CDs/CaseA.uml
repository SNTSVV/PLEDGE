<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Model xmi:id="_0" name="TaxCard" URI="http:///TaxCard.ecore">
    <eAnnotations xmi:id="_http2F2Fwww.eclipse.org2FOCL2FImport" source="http://www.eclipse.org/OCL/Import">
      <details xmi:id="_http2F2Fwww.eclipse.org2FOCL2FImport-_details.0" key="ecore" value="http://www.eclipse.org/emf/2002/Ecore"/>
    </eAnnotations>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Grantor" name="Grantor">
      <ownedLiteral xmi:id="Grantor-ACD" name="ACD"/>
      <ownedLiteral xmi:id="Grantor-Employer" name="Employer"/>
      <ownedLiteral xmi:id="Grantor-CNPF" name="CNPF"/>
      <ownedLiteral xmi:id="Grantor-CEDIES" name="CEDIES"/>
      <ownedLiteral xmi:id="Grantor-SNJ" name="SNJ"/>
      <ownedLiteral xmi:id="Grantor-CNAP" name="CNAP"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Constants" name="Constants" isAbstract="true">
      <ownedAttribute xmi:id="Constants-MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD-_defaultValue" value="3480.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE-_defaultValue" value="3600.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MINIMUM_SALARY" name="MINIMUM_SALARY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MINIMUM_SALARY-_defaultValue" value="1500.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION-_defaultValue" value="4500.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS-_defaultValue" value="20.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS-_defaultValue" value="120.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANC" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANC" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANC-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE-_defaultValue" value="24000.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION-_defaultValue" value="99.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION-_defaultValue" value="30.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION-_defaultValue" value="4.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIM_DAILY" name="FLAT_RATE_CIM_DAILY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIM_DAILY-_defaultValue" value="2.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIM_MONTHLY" name="FLAT_RATE_CIM_MONTHLY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIM_MONTHLY-_defaultValue" value="62.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIM_YEARLY" name="FLAT_RATE_CIM_YEARLY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIM_YEARLY-_defaultValue" value="750.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIP_DAILY" name="FLAT_RATE_CIP_DAILY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIP_DAILY-_defaultValue" value="1.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIP_MONTHLY" name="FLAT_RATE_CIP_MONTHLY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIP_MONTHLY-_defaultValue" value="25.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIP_YEARLY" name="FLAT_RATE_CIP_YEARLY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIP_YEARLY-_defaultValue" value="30.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIS_DAILY" name="FLAT_RATE_CIS_DAILY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIS_DAILY-_defaultValue" value="1.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIS_MONTHLY" name="FLAT_RATE_CIS_MONTHLY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIS_MONTHLY-_defaultValue" value="25.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_CIS_YEARLY" name="FLAT_RATE_CIS_YEARLY" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_CIS_YEARLY-_defaultValue" value="300.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Constants-FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT-_defaultValue" value="99.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Constants-MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Disability_Types" name="Disability_Types">
      <ownedLiteral xmi:id="_lbDFgH_REeSKo9E5ldkH6Q" name="NONE"/>
      <ownedLiteral xmi:id="Disability_Types-A" name="A"/>
      <ownedLiteral xmi:id="Disability_Types-B" name="B"/>
      <ownedLiteral xmi:id="Disability_Types-C" name="C"/>
      <ownedLiteral xmi:id="Disability_Types-D" name="D"/>
      <ownedLiteral xmi:id="Disability_Types-E" name="E"/>
      <ownedLiteral xmi:id="_z-prIH_MEeSKo9E5ldkH6Q" name="OTHER"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Country" name="Country">
      <ownedLiteral xmi:id="Country-LU" name="LU"/>
      <ownedLiteral xmi:id="Country-FR" name="FR"/>
      <ownedLiteral xmi:id="Country-BE" name="BE"/>
      <ownedLiteral xmi:id="Country-DE" name="DE"/>
      <ownedLiteral xmi:id="Country-NL" name="NL"/>
      <ownedLiteral xmi:id="Country-OTHER" name="OTHER"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Tax_Card_Type" name="Tax_Card_Type">
      <ownedLiteral xmi:id="Tax_Card_Type-Principal" name="Principal"/>
      <ownedLiteral xmi:id="Tax_Card_Type-Additional" name="Additional"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Tax_Office" name="Tax_Office">
      <ownedLiteral xmi:id="Tax_Office-RTS_2" name="RTS_2"/>
      <ownedLiteral xmi:id="Tax_Office-RTS_3" name="RTS_3"/>
      <ownedLiteral xmi:id="Tax_Office-RTS_Esch" name="RTS_Esch"/>
      <ownedLiteral xmi:id="Tax_Office-RTS_Ettelbruck" name="RTS_Ettelbruck"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Tax_Class_Category" name="Tax_Class_Category">
      <ownedLiteral xmi:id="Tax_Class_Category-One" name="One"/>
      <ownedLiteral xmi:id="Tax_Class_Category-One_A" name="One_A"/>
      <ownedLiteral xmi:id="Tax_Class_Category-Two" name="Two"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Job_Activity" name="Job_Activity">
      <ownedLiteral xmi:id="Job_Activity-Salary" name="Salary"/>
      <ownedLiteral xmi:id="Job_Activity-Pension" name="Pension"/>
      <ownedLiteral xmi:id="Job_Activity-Annuity" name="Annuity"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Town" name="Town">
      <ownedLiteral xmi:id="Town-Luxembourg_city" name="Luxembourg_city"/>
      <ownedLiteral xmi:id="Town-Bertrange" name="Bertrange"/>
      <ownedLiteral xmi:id="Town-Strassen" name="Strassen"/>
      <ownedLiteral xmi:id="Town-Bettembourg" name="Bettembourg"/>
      <ownedLiteral xmi:id="Town-Beaufort" name="Beaufort"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Type_of_Rate" name="Type_of_Rate">
      <ownedLiteral xmi:id="Type_of_Rate-REGULAR" name="REGULAR"/>
      <ownedLiteral xmi:id="Type_of_Rate-REAL_COST" name="REAL_COST"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="CE_Type" name="CE_Type">
      <ownedLiteral xmi:id="CE_Type-INALIDITY_AND_INFIRMITY" name="INALIDITY_AND_INFIRMITY"/>
      <ownedLiteral xmi:id="CE_Type-DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD"/>
      <ownedLiteral xmi:id="CE_Type-CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Expense_Purpose" name="Expense_Purpose">
      <ownedLiteral xmi:id="Expense_Purpose-HOUSE_CARE" name="HOUSE_CARE"/>
      <ownedLiteral xmi:id="Expense_Purpose-CHILD_CARE" name="CHILD_CARE"/>
      <ownedLiteral xmi:id="Expense_Purpose-DEPENDENCE_CARE" name="DEPENDENCE_CARE"/>
      <ownedLiteral xmi:id="Expense_Purpose-OTHER" name="OTHER"/>
      <ownedLiteral xmi:id="_O-S64JN1EeSS6JjHMC2a3A" name="ALIMONY"/>
      <ownedLiteral xmi:id="_qE9ewJQ8EeSMZqrJQmR94g" name="RECURRENT_DEPT"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Dependent_Type" name="Dependent_Type">
      <ownedLiteral xmi:id="Dependent_Type-CHILD" name="CHILD"/>
      <ownedLiteral xmi:id="Dependent_Type-SPOUSE" name="SPOUSE"/>
      <ownedLiteral xmi:id="Dependent_Type-RELATIVE" name="RELATIVE"/>
      <ownedLiteral xmi:id="Dependent_Type-OTHER_FAMILY_MEMBER" name="OTHER_FAMILY_MEMBER"/>
      <ownedLiteral xmi:id="_h4BBsJA6EeSrKuFMY7nEzg" name="NOT_OWN_CHILD"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Income_Tax" name="Income_Tax">
      <ownedAttribute xmi:id="Income_Tax-taxPayer" name="taxPayer" type="Tax_Payer" isOrdered="true"/>
      <ownedAttribute xmi:id="Income_Tax-tax_amount" name="tax_amount" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Tax-tax_year" name="tax_year" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_-scnAEzrEeaVApgXPK28xA" name="id6" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Tax_Payer" name="Tax_Payer" isAbstract="true">
      <generalization xmi:id="Tax_Payer-_generalization.0" general="Physical_Person"/>
      <ownedAttribute xmi:id="Tax_Payer-dependents" name="dependents" type="Dependent" aggregation="composite" association="_packagedElement.27">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Tax_Payer-dependents-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Tax_Payer-dependents-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Payer-expenses" name="expenses" type="Expense" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Tax_Payer-expenses-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Tax_Payer-expenses-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Payer-incomes" name="incomes" type="Income" aggregation="composite" association="_packagedElement.51">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Tax_Payer-incomes-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Payer-from_law" name="from_law" type="FromLaw" isOrdered="true" aggregation="composite" association="_packagedElement.56"/>
      <ownedAttribute xmi:id="Tax_Payer-from_agent" name="from_agent" type="FromAgent" isOrdered="true" aggregation="composite" association="_packagedElement.58"/>
      <ownedAttribute xmi:id="_DMhXsDoCEeWS2a--AKriEw" name="AEP_deduction">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_45v9gMxuEei5Q8TGDJGlqQ" name="taxesDue">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_QwEgMIXwEeSLiOAbrK2uyQ" client="Tax_Payer" supplier="_1gja4IXvEeSLiOAbrK2uyQ" contract="_1gja4IXvEeSLiOAbrK2uyQ"/>
      <ownedOperation xmi:id="Tax_Payer-is_dependent_part_of_the_household" name="is_dependent_part_of_the_household" visibility="public">
        <ownedParameter xmi:id="Tax_Payer-is_dependent_part_of_the_household-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Tax_Payer-is_dependent_part_of_the_household-IN_dependent" name="IN_dependent" type="Dependent" isOrdered="true"/>
      </ownedOperation>
      <ownedOperation xmi:id="Tax_Payer-number_of_months_of_allowance" name="number_of_months_of_allowance" visibility="public">
        <ownedParameter xmi:id="Tax_Payer-number_of_months_of_allowance-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigInteger"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Tax_Payer-deduction_according_disability_rate" name="deduction_according_disability_rate" visibility="public">
        <eAnnotations xmi:id="Tax_Payer-deduction_according_disability_rate-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Tax_Payer-deduction_according_disability_rate-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="if ( self.disability_percentage >= 0.25 and  self.disability_percentage &lt; 0.35) then&#xA;&#x9;&#x9;&#x9;150&#xA;&#x9;&#x9;&#x9;else if ( self.disability_percentage >= 0.35  and self.disability_percentage &lt; 0.45) then&#xA;&#x9;&#x9;&#x9;225&#xA;&#x9;&#x9;&#x9;else if ( self.disability_percentage >=0.45 and  self.disability_percentage &lt;0.55) then&#xA;&#x9;&#x9;&#x9;375&#xA;&#x9;&#x9;&#x9;else if ( self.disability_percentage >= 0.55 and  self.disability_percentage &lt; 0.65 ) then&#xA;&#x9;&#x9;&#x9;450 &#xA;&#x9;&#x9;&#x9;else if ( self.disability_percentage >= 0.65 and self.disability_percentage &lt; 0.75) then&#xA;&#x9;&#x9;&#x9;525&#xA;&#x9;&#x9;&#x9;else if ( self.disability_percentage >=0.75 and self.disability_percentage &lt; 0.85) then&#xA;&#x9;&#x9;&#x9;585&#xA;&#x9;&#x9;&#x9;else if ( self.disability_percentage >=0.85 and  self.disability_percentage&lt;  0.95) then&#xA;&#x9;&#x9;&#x9;645&#xA;&#x9;&#x9;&#x9;else if ( self.disability_percentage >= 0.95 and self.disability_percentage&lt;=1)then&#xA;&#x9;&#x9;&#x9;735 else 0 endif endif endif endif endif endif endif endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="Tax_Payer-deduction_according_disability_rate-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L9WaYIIGEeSH_sby466C_w" name="getIsTaxedJointly">
        <eAnnotations xmi:id="_drkIkIIGEeSH_sby466C_w" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_gU8loIIGEeSH_sby466C_w" key="body" value="let is_married:Boolean = if(self.getLegalUnionRecord(year).oclIsUndefined()) then false else self.getLegalUnionRecord(year).oclIsTypeOf(Marriage_Record) endif in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;/** Description: - **/&#x9;&#xA;if (is_married) = false then&#xA;   let is_in_partnership_relation:Boolean = if(self.getLegalUnionRecord(year).oclIsUndefined()) then false else self.getLegalUnionRecord(year).oclIsTypeOf(Partnership_Record) endif in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;   /** Description: -  **/&#x9;&#xA;   if (is_in_partnership_relation) = false then&#xA;   false&#xA;   else&#xA;     if (is_in_partnership_relation) = true then&#xA;          let is_joint_tax_beneficial:Boolean = true in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: -  **/&#x9;&#xA;          if (is_joint_tax_beneficial) = true then&#xA;                  let is_couple_living_apart:Boolean = false in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                  /** Description: -  **/&#x9;&#xA;                  let relation_lasted_for_the_taxation_year:Boolean = true  in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                  /** Description: -  **/&#x9;&#xA;                  if (relation_lasted_for_the_taxation_year and not is_couple_living_apart) = false then&#xA;                  false&#xA;                  else&#xA;                    if (relation_lasted_for_the_taxation_year and not is_couple_living_apart) = true then&#xA;                              let are_both_spouses_resident:Boolean = (self.getSpouse(year).oclIsTypeOf(Resident_Tax_Payer) or self.getSpouse(year).oclIsTypeOf(Physical_Person)) and self.oclIsTypeOf(Resident_Tax_Payer) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                              /** Description: -  **/&#x9;&#xA;                              if (are_both_spouses_resident) = true then&#xA;                              true&#xA;                              else&#xA;                                 if (are_both_spouses_resident) = false then&#xA;                                             let are_both_spouses_non_resident:Boolean = (self.getSpouse(year).oclIsTypeOf(Non_Resident_Tax_Payer) or self.getSpouse(year).oclIsTypeOf(Physical_Person)) and self.oclIsTypeOf(Non_Resident_Tax_Payer) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                             /** Description: -  **/&#x9;&#xA;                                             if (are_both_spouses_non_resident) = false then&#xA;                                             false&#xA;                                             else&#xA;                                                if (are_both_spouses_non_resident) = true then&#xA;                                                               let my_incomes_all:Set(Income) = self.incomes->select(i:Income|i.year=year and i.oclIsTypeOf(Local_Income)) &#xA;                                                               &#x9;in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: -  **/&#x9;&#xA;                                                               let spouse_incomes_all:Set(Income) = if(self.getSpouse(year).oclIsKindOf(Tax_Payer)) then self.getSpouse(year).oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.oclIsTypeOf(Local_Income)) else OrderedSet{} endif&#x9;in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               let total_household_income:Real = if(my_incomes_all->oclIsInvalid() and spouse_incomes_all->oclIsInvalid()) then 0 else if(my_incomes_all->oclIsInvalid()) then spouse_incomes_all.income_amount->sum() else if(spouse_incomes_all->oclIsInvalid()) then my_incomes_all.income_amount->sum() else my_incomes_all.income_amount->sum() + spouse_incomes_all.income_amount->sum()  endif endif endif&#xA;                                                               in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: -  **/&#x9;&#xA;                                                               let resident_taxpayer_income:Real = if(self.oclIsTypeOf(Resident_Tax_Payer)) then if(my_incomes_all->oclIsInvalid()) then 0.0 else my_incomes_all.income_amount->sum() endif else if(spouse_incomes_all->oclIsInvalid()) then 0.0 else spouse_incomes_all.income_amount->sum() endif endif in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: -  **/&#x9;&#xA;                                                               let non_resident_taxpayer_in_Belgium:Boolean = false in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: -  **/&#x9;&#xA;                                                               if ((resident_taxpayer_income > total_household_income * 0.9) or (non_resident_taxpayer_in_Belgium and resident_taxpayer_income > total_household_income * 0.5)) = true then&#xA;                                                               true&#xA;                                                               else&#xA;                                                                 if ((resident_taxpayer_income > total_household_income * 0.9) or (non_resident_taxpayer_in_Belgium and resident_taxpayer_income > total_household_income * 0.5)) = false then&#xA;                                                                 false&#xA;                                                                 else&#xA;                                                                 invalid&#xA;                                                                 endif&#xA;                                                               endif&#xA;                                                else&#xA;                                                invalid&#xA;                                                endif&#xA;                                             endif&#xA;                                 else&#xA;                                 invalid&#xA;                                 endif&#xA;                              endif&#xA;                    else&#xA;                    invalid&#xA;                    endif&#xA;                  endif&#xA;          else&#xA;             if (is_joint_tax_beneficial) = false then&#xA;             false&#xA;             else&#xA;             invalid&#xA;             endif&#xA;          endif&#xA;     else&#xA;     invalid&#xA;     endif&#xA;   endif&#xA;else&#xA;   if (is_married) = true then&#xA;     let are_both_spouses_resident:Boolean = (self.getSpouse(year).oclIsTypeOf(Resident_Tax_Payer) or  self.getSpouse(year).oclIsTypeOf(Physical_Person)) and self.oclIsTypeOf(Resident_Tax_Payer) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;     /** Description: -  **/&#x9;&#xA;     if (are_both_spouses_resident) = true then&#xA;     true&#xA;     else&#xA;        if (are_both_spouses_resident) = false then&#xA;             let are_both_spouses_non_resident:Boolean = (self.getSpouse(year).oclIsTypeOf(Non_Resident_Tax_Payer) or self.getSpouse(year).oclIsTypeOf(Physical_Person)) and self.oclIsTypeOf(Non_Resident_Tax_Payer) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;             /** Description: -  **/&#x9;&#xA;             if (are_both_spouses_non_resident) = true then&#xA;                    let my_incomes_all:Set(Income) = self.incomes->select(i:Income|i.year=year and i.oclIsTypeOf(Local_Income)) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: -  **/&#x9;&#xA;                     let spouse_incomes_all:Set(Income) = if(self.getSpouse(year).oclIsKindOf(Tax_Payer)) then self.getSpouse(year).oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.oclIsTypeOf(Local_Income)) else OrderedSet{} endif&#x9;in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: -  **/&#x9;&#xA;                    let total_household_income:Real = if(my_incomes_all->oclIsInvalid() and spouse_incomes_all->oclIsInvalid()) then 0 else if(my_incomes_all->oclIsInvalid()) then spouse_incomes_all.income_amount->sum() else if(spouse_incomes_all->oclIsInvalid()) then my_incomes_all.income_amount->sum() else my_incomes_all.income_amount->sum() + spouse_incomes_all.income_amount->sum()  endif endif endif&#xA;                     in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: -  **/&#x9;&#xA;                    let resident_taxpayer_income:Real = if(self.oclIsTypeOf(Resident_Tax_Payer)) then if(my_incomes_all->oclIsInvalid()) then 0.0 else my_incomes_all.income_amount->sum() endif else if(spouse_incomes_all->oclIsInvalid()) then 0.0 else spouse_incomes_all.income_amount->sum() endif endif in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: -  **/&#x9;&#xA;                    let non_resident_taxpayer_in_Belgium:Boolean = false in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: -  **/&#x9;&#xA;                    let is_couple_assimilated_to_residents:Boolean = (resident_taxpayer_income > total_household_income * 0.9) or (non_resident_taxpayer_in_Belgium and resident_taxpayer_income > total_household_income * 0.5) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: -  **/&#x9;&#xA;                    if (is_couple_assimilated_to_residents) = true then&#xA;                    true&#xA;                    else&#xA;                       if (is_couple_assimilated_to_residents) = false then&#xA;                                 let is_couple_living_apart:Boolean = false in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                 /** Description: -  **/&#x9;&#xA;                                 if (is_couple_living_apart) = true then&#xA;                                 false&#xA;                                 else&#xA;                                   if (is_couple_living_apart) = false then&#xA;                                                let my_incomes:Set(Income) = self.incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) &#x9;in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                /** Description: -  **/&#x9;&#xA;                                                let spouse_incomes:Set(Income) = if(self.getSpouse(year).oclIsKindOf(Tax_Payer)) then self.getSpouse(year).oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) else OrderedSet{} endif&#x9;in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                /** Description: -  **/&#x9;&#xA;                                                let both_spouses_have_professional_income:Boolean = if(my_incomes->oclIsInvalid() or spouse_incomes->oclIsInvalid()) then false else my_incomes->size()>0 and spouse_incomes->size()>0 endif in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                /** Description: -  **/&#x9;&#xA;                                                if (both_spouses_have_professional_income) = true then&#xA;                                                               let local_professional_household_income:Real = self.getProfetionalIncomeHouseholdLuxembourg(year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: -  **/&#x9;&#xA;                                                               let total_professional_household_income:Real = self.getProfetionalIncomeHousehold(year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: -  **/&#x9;&#xA;                                                               if (local_professional_household_income   > total_professional_household_income * 0.5) = false then&#xA;                                                               false&#xA;                                                               else&#xA;                                                                 if (local_professional_household_income   > total_professional_household_income * 0.5) = true then&#xA;                                                                 true&#xA;                                                                 else&#xA;                                                                 invalid&#xA;                                                                 endif&#xA;                                                               endif&#xA;                                                else&#xA;                                                  if (both_spouses_have_professional_income) = false then&#xA;                                                  false&#xA;                                                  else&#xA;                                                  invalid&#xA;                                                  endif&#xA;                                                endif&#xA;                                   else&#xA;                                   invalid&#xA;                                   endif&#xA;                                 endif&#xA;                       else&#xA;                       invalid&#xA;                       endif&#xA;                    endif&#xA;             else&#xA;               if (are_both_spouses_non_resident) = false then&#xA;                       let is_couple_living_apart:Boolean = false in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                       /** Description: -  **/&#x9;&#xA;                       if (is_couple_living_apart) = true then&#xA;                       false&#xA;                       else&#xA;                         if (is_couple_living_apart) = false then&#xA;                                   let my_incomes:Set(Income) = self.incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) &#x9;in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                   /** Description: -  **/&#x9;&#xA;                                   let spouse_incomes:Set(Income) = if(self.getSpouse(year).oclIsKindOf(Tax_Payer)) then self.getSpouse(year).oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) else OrderedSet{} endif&#x9;in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                   /** Description: -  **/&#x9;&#xA;                                   let both_spouses_have_professional_income:Boolean = if(my_incomes->oclIsInvalid() or spouse_incomes->oclIsInvalid()) then false else my_incomes->size()>0 and spouse_incomes->size()>0 endif in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                   /** Description: -  **/&#x9;&#xA;                                   if (both_spouses_have_professional_income) = true then&#xA;                                                let total_professional_household_income:Real = self.getProfetionalIncomeHousehold(year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                /** Description: -  **/&#x9;&#xA;                                                let professional_income_resident_taxpayer:Real = if(self.oclIsTypeOf(Resident_Tax_Payer)) then if(my_incomes->oclIsInvalid()) then 0.0 else my_incomes.income_amount->sum() endif else if(spouse_incomes->oclIsInvalid()) then 0.0 else spouse_incomes.income_amount->sum() endif endif in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                /** Description: -  **/&#x9;&#xA;                                                if (professional_income_resident_taxpayer > total_professional_household_income * 0.9) = false then&#xA;                                                false&#xA;                                                else&#xA;                                                  if (professional_income_resident_taxpayer > total_professional_household_income * 0.9) = true then&#xA;                                                  true&#xA;                                                  else&#xA;                                                  invalid&#xA;                                                  endif&#xA;                                                endif&#xA;                                   else&#xA;                                      if (both_spouses_have_professional_income) = false then&#xA;                                      false&#xA;                                      else&#xA;                                      invalid&#xA;                                      endif&#xA;                                   endif&#xA;                         else&#xA;                         invalid&#xA;                         endif&#xA;                       endif&#xA;               else&#xA;               invalid&#xA;               endif&#xA;             endif&#xA;        else&#xA;        invalid&#xA;        endif&#xA;     endif&#xA;   else&#xA;   invalid&#xA;   endif&#xA;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_QGGYcIIGEeSH_sby466C_w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_SxLeoIIGEeSH_sby466C_w" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ZwhBoIOuEeSemtkAhxylbQ" name="getIsreceivingAllowancesForChildren">
        <eAnnotations xmi:id="_hmTSIIOuEeSemtkAhxylbQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_jB34QIOuEeSemtkAhxylbQ" key="body" value="let children1:Set(Dependent)=self.dependents->select(dependent_type=Dependent_Type::CHILD) in&#xA;&#x9;&#x9;&#x9;let union:Legal_Union_Record=self.getLegalUnionRecord(year) in&#xA;&#x9;&#x9;&#x9;let house: Household = union.household in&#xA;&#x9;&#x9;&#x9;let children:Set(Dependent)=if (house.oclIsInvalid()) then children1 else children1->union(house.children) endif in&#xA;&#x9;&#x9;&#x9;if(children->size()=0)then&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;else&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;let allowances:Boolean=children.allowances->select(starting_year&lt;=year and ending_year=-1 and amount>0)->size()>0in&#xA;&#x9;&#x9;&#x9;if(allowances)then&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_cpgA8IOuEeSemtkAhxylbQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_eOKRoIOuEeSemtkAhxylbQ" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_djn4IIO0EeSN9uRKzOYzEA" name="getProfetionalIncomeHousehold">
        <eAnnotations xmi:id="_rgGaEIO0EeSN9uRKzOYzEA" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_sChKoIO0EeSN9uRKzOYzEA" key="body" value="let spouse:Physical_Person= self.getSpouse(year)in&#xA;&#x9;&#x9;&#x9;let include_spouse:Boolean= if(not spouse.oclIsUndefined()) then spouse.oclIsKindOf(Tax_Payer) else false endif in&#xA;&#x9;&#x9;&#x9;let myIncomes:Set(Income)=self.incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income)) in&#xA;&#x9;&#x9;&#x9;let myPart:Real= if(myIncomes->oclIsInvalid())then 0.0 else myIncomes.income_amount->sum() endif in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(include_spouse=false)then&#xA;&#x9;&#x9;&#x9;myPart&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let herIncomes:Set(Income)=spouse.oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income)) in&#xA;&#x9;&#x9;&#x9;let herPart:Real=if(herIncomes->oclIsInvalid())then 0.0 else herIncomes.income_amount->sum() endif in&#xA;&#x9;&#x9;&#x9;myPart+herPart&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_hZwcMIO0EeSN9uRKzOYzEA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_jSzogIO0EeSN9uRKzOYzEA" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vjloMIO1EeSN9uRKzOYzEA" name="getProfetionalIncomeHouseholdLuxembourg">
        <eAnnotations xmi:id="_5HBtUIO1EeSN9uRKzOYzEA" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_6C778IO1EeSN9uRKzOYzEA" key="body" value="let spouse:Physical_Person= self.getSpouse(year)in&#xA;&#x9;&#x9;&#x9;let include_spouse:Boolean= if(not spouse.oclIsUndefined()) then spouse.oclIsKindOf(Tax_Payer) else false endif in&#xA;&#x9;&#x9;&#x9;let myIncomes:Set(Income)=self.incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) in&#xA;&#x9;&#x9;&#x9;let myPart:Real=if(myIncomes->oclIsInvalid())then 0.0 else myIncomes.income_amount->sum() endif in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(include_spouse=false)then&#xA;&#x9;&#x9;&#x9;myPart&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let herIncomes:Set(Income)=spouse.oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income)and i.oclIsTypeOf(Local_Income)) in&#xA;&#x9;&#x9;&#x9;let herPart:Real=if(herIncomes->oclIsInvalid())then 0.0 else  herIncomes.income_amount->sum() endif in&#xA;&#x9;&#x9;&#x9;myPart+herPart&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_x1FwwIO1EeSN9uRKzOYzEA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_1s_2cIO1EeSN9uRKzOYzEA" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_snYCgIUlEeSLxMrgoK8NOA" name="getTaxClass">
        <eAnnotations xmi:id="_8q7lsIUlEeSLxMrgoK8NOA" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_-M8LAIUlEeSLxMrgoK8NOA" key="body" value="let is_resident_taxpayer:Boolean = self.oclIsKindOf(Resident_Tax_Payer) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;/** Description: Returns yes if a given taxpayer is a resident. - **/&#x9;&#xA;if (is_resident_taxpayer) = true then&#xA;   let is_taxed_jointly:Boolean = self.getIsTaxedJointly(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;   /** Description: Returns yes if the taxpayer is married or has a partnership contract. -  **/&#x9;&#xA;   if (is_taxed_jointly) = true then&#xA;   Tax_Class_Category::Two&#xA;   else&#xA;     if (is_taxed_jointly) = false then&#xA;          let is_divorced:Boolean = self.getSeperationState(taxation_year,Separation_Causes::DIVORCE) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: Returns yes if the taxpayer is divorced within the selected taxation year. -  **/&#x9;&#xA;          let is_living_separately:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_DE_FAIT) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: Returns yes if the taxpayer is not cohabiting with his/her spouse. In French: &quot;Separation de fait&quot;. -  **/&#x9;&#xA;          let is_living_separately_by_court:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_BY_COURT) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: Returns yes if the taxpayer has a judicial sentence dismissing him from cohabiting with his/her spouse. In French: &quot;Separation de corps&quot;. -  **/&#x9;&#xA;          if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = false then&#xA;                  let is_widower:Boolean = self.is_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                  /** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/&#x9;&#xA;                  if (is_widower) = true then&#xA;                            let spouse_death_year:Integer = self.last_start_year_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                            /** Description: Returns the year on which the spouse of the taxpayer past away. -  **/&#x9;&#xA;                            if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = true then&#xA;                            Tax_Class_Category::Two&#xA;                            else&#xA;                              if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = false then&#xA;                              Tax_Class_Category::One_A&#xA;                              else&#xA;                              invalid&#xA;                              endif&#xA;                            endif&#xA;                  else&#xA;                    if (is_widower) = false then&#xA;                              let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                              /** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/&#x9;&#xA;                              if (is_reciving_bonus_for_children) = true then&#xA;                              Tax_Class_Category::One_A&#xA;                              else&#xA;                                 if (is_reciving_bonus_for_children) = false then&#xA;                                             let taxpayer_age:Integer = self.getAge(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                             /** Description: Returns the age of a given taxpayer. -  **/&#x9;&#xA;                                             if (taxpayer_age >= 64) = true then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                                if (taxpayer_age >= 64) = false then&#xA;                                                Tax_Class_Category::One&#xA;                                                else&#xA;                                                invalid&#xA;                                                endif&#xA;                                             endif&#xA;                                 else&#xA;                                 invalid&#xA;                                 endif&#xA;                              endif&#xA;                    else&#xA;                    invalid&#xA;                    endif&#xA;                  endif&#xA;          else&#xA;             if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = true then&#xA;                    let can_beneficiate_from_transition_state :Boolean = self.getDivorceTransitionState(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: Returns yes if: (1) the divorce/separation occurred within the last three years from the taxation year, and (2) the taxpayer did has not benefited from a divorce/separation transition state for the last five years from the current taxation year.  -  **/&#x9;&#xA;                    if (can_beneficiate_from_transition_state ) = false then&#xA;                              let is_widower:Boolean = self.is_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                              /** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/&#x9;&#xA;                              if (is_widower) = true then&#xA;                                           let spouse_death_year:Integer = self.last_start_year_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                           /** Description: Returns the year on which the spouse of the taxpayer past away. -  **/&#x9;&#xA;                                           if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = true then&#xA;                                           Tax_Class_Category::Two&#xA;                                           else&#xA;                                             if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = false then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                             invalid&#xA;                                             endif&#xA;                                           endif&#xA;                              else&#xA;                                 if (is_widower) = false then&#xA;                                             let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                             /** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/&#x9;&#xA;                                             if (is_reciving_bonus_for_children) = true then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                                if (is_reciving_bonus_for_children) = false then&#xA;                                                               let taxpayer_age:Integer = self.getAge(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: Returns the age of a given taxpayer. -  **/&#x9;&#xA;                                                               if (taxpayer_age >= 64) = true then&#xA;                                                               Tax_Class_Category::One_A&#xA;                                                               else&#xA;                                                                 if (taxpayer_age >= 64) = false then&#xA;                                                                 Tax_Class_Category::One&#xA;                                                                 else&#xA;                                                                 invalid&#xA;                                                                 endif&#xA;                                                               endif&#xA;                                                else&#xA;                                                invalid&#xA;                                                endif&#xA;                                             endif&#xA;                                 else&#xA;                                 invalid&#xA;                                 endif&#xA;                              endif&#xA;                    else&#xA;                       if (can_beneficiate_from_transition_state ) = true then&#xA;                       Tax_Class_Category::Two&#xA;                       else&#xA;                       invalid&#xA;                       endif&#xA;                    endif&#xA;             else&#xA;             invalid&#xA;             endif&#xA;          endif&#xA;     else&#xA;     invalid&#xA;     endif&#xA;   endif&#xA;else&#xA;   if (is_resident_taxpayer) = false then&#xA;     let is_married:Boolean = self.getIsMaried(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;     /** Description: Returns yes if the taxpayer is married. -  **/&#x9;&#xA;     if (is_married) = false then&#xA;          let is_taxed_jointly:Boolean = self.getIsTaxedJointly(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: Returns yes if the taxpayer is married or has a partnership contract. -  **/&#x9;&#xA;          if (is_taxed_jointly) = true then&#xA;          Tax_Class_Category::Two&#xA;          else&#xA;             if (is_taxed_jointly) = false then&#xA;                    let is_divorced:Boolean = self.getSeperationState(taxation_year,Separation_Causes::DIVORCE) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: Returns yes if the taxpayer is divorced within the selected taxation year. -  **/&#x9;&#xA;                    let is_living_separately:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_DE_FAIT) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: Returns yes if the taxpayer is not cohabiting with his/her spouse. In French: &quot;Separation de fait&quot;. -  **/&#x9;&#xA;                    let is_living_separately_by_court:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_BY_COURT) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: Returns yes if the taxpayer has a judicial sentence dismissing him from cohabiting with his/her spouse. In French: &quot;Separation de corps&quot;. -  **/&#x9;&#xA;                    if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = false then&#xA;                              let is_widower:Boolean = self.is_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                              /** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/&#x9;&#xA;                              if (is_widower) = true then&#xA;                                           let spouse_death_year:Integer = self.last_start_year_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                           /** Description: Returns the year on which the spouse of the taxpayer past away. -  **/&#x9;&#xA;                                           if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = true then&#xA;                                           Tax_Class_Category::Two&#xA;                                           else&#xA;                                             if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = false then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                             invalid&#xA;                                             endif&#xA;                                           endif&#xA;                              else&#xA;                                 if (is_widower) = false then&#xA;                                             let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                             /** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/&#x9;&#xA;                                             if (is_reciving_bonus_for_children) = true then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                                if (is_reciving_bonus_for_children) = false then&#xA;                                                               let taxpayer_age:Integer = self.getAge(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: Returns the age of a given taxpayer. -  **/&#x9;&#xA;                                                               if (taxpayer_age >= 64) = true then&#xA;                                                               Tax_Class_Category::One_A&#xA;                                                               else&#xA;                                                                 if (taxpayer_age >= 64) = false then&#xA;                                                                 Tax_Class_Category::One&#xA;                                                                 else&#xA;                                                                 invalid&#xA;                                                                 endif&#xA;                                                               endif&#xA;                                                else&#xA;                                                invalid&#xA;                                                endif&#xA;                                             endif&#xA;                                 else&#xA;                                 invalid&#xA;                                 endif&#xA;                              endif&#xA;                    else&#xA;                       if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = true then&#xA;                                 let can_beneficiate_from_transition_state :Boolean = self.getDivorceTransitionState(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                 /** Description: Returns yes if: (1) the divorce/separation occurred within the last three years from the taxation year, and (2) the taxpayer did has not benefited from a divorce/separation transition state for the last five years from the current taxation year.  -  **/&#x9;&#xA;                                 if (can_beneficiate_from_transition_state ) = false then&#xA;                                             let is_widower:Boolean = self.is_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                             /** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/&#x9;&#xA;                                             if (is_widower) = true then&#xA;                                                            let spouse_death_year:Integer = self.last_start_year_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                            /** Description: Returns the year on which the spouse of the taxpayer past away. -  **/&#x9;&#xA;                                                            if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = true then&#xA;                                                            Tax_Class_Category::Two&#xA;                                                            else&#xA;                                                               if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = false then&#xA;                                                               Tax_Class_Category::One_A&#xA;                                                               else&#xA;                                                               invalid&#xA;                                                               endif&#xA;                                                            endif&#xA;                                             else&#xA;                                                if (is_widower) = false then&#xA;                                                               let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/&#x9;&#xA;                                                               if (is_reciving_bonus_for_children) = true then&#xA;                                                               Tax_Class_Category::One_A&#xA;                                                               else&#xA;                                                                 if (is_reciving_bonus_for_children) = false then&#xA;                                                                                   let taxpayer_age:Integer = self.getAge(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                                                   /** Description: Returns the age of a given taxpayer. -  **/&#x9;&#xA;                                                                                   if (taxpayer_age >= 64) = true then&#xA;                                                                                   Tax_Class_Category::One_A&#xA;                                                                                   else&#xA;                                                                                     if (taxpayer_age >= 64) = false then&#xA;                                                                                     Tax_Class_Category::One&#xA;                                                                                     else&#xA;                                                                                     invalid&#xA;                                                                                     endif&#xA;                                                                                   endif&#xA;                                                                 else&#xA;                                                                 invalid&#xA;                                                                 endif&#xA;                                                               endif&#xA;                                                else&#xA;                                                invalid&#xA;                                                endif&#xA;                                             endif&#xA;                                 else&#xA;                                   if (can_beneficiate_from_transition_state ) = true then&#xA;                                   Tax_Class_Category::Two&#xA;                                   else&#xA;                                   invalid&#xA;                                   endif&#xA;                                 endif&#xA;                       else&#xA;                       invalid&#xA;                       endif&#xA;                    endif&#xA;             else&#xA;             invalid&#xA;             endif&#xA;          endif&#xA;     else&#xA;        if (is_married) = true then&#xA;             let total_professional_income_household:Real = self.getProfetionalIncomeHousehold(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;             /** Description: Returns the sum of the taxpayer's household professional incomes. -  **/&#x9;&#xA;             let sum_professional_income_household_Luxembourg:Real = self.getProfetionalIncomeHouseholdLuxembourg(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;             /** Description: Returns the sum of the taxpayer's household professional incomes that are taxed in Luxembourg. -  **/&#x9;&#xA;             if (sum_professional_income_household_Luxembourg > (0.5 * total_professional_income_household)) = true then&#xA;             Tax_Class_Category::Two&#xA;             else&#xA;               if (sum_professional_income_household_Luxembourg > (0.5 * total_professional_income_household)) = false then&#xA;               Tax_Class_Category::One_A&#xA;               else&#xA;               invalid&#xA;               endif&#xA;             endif&#xA;        else&#xA;        invalid&#xA;        endif&#xA;     endif&#xA;   else&#xA;   invalid&#xA;   endif&#xA;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_1e2ZgIUlEeSLxMrgoK8NOA" type="Tax_Class_Category" direction="return"/>
        <ownedParameter xmi:id="_4QNt4IUlEeSLxMrgoK8NOA" name="taxation_year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_p8UEQDUKEeWdc7hBYHG85A" name="getTaxClassModified">
        <eAnnotations xmi:id="_gJH2cDULEeWdc7hBYHG85A" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_iYKg4DULEeWdc7hBYHG85A" key="body" value="let is_resident_taxpayer:Boolean = self.oclIsKindOf(Resident_Tax_Payer) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;/** Description: Returns yes if a given taxpayer is a resident. - **/&#x9;&#xA;if (is_resident_taxpayer) = true then&#xA;   let is_divorced:Boolean = self.getSeperationState(taxation_year,Separation_Causes::DIVORCE) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;   /** Description: Returns yes if the taxpayer is divorced within the selected taxation year. -  **/&#x9;&#xA;   let is_living_separately:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_DE_FAIT) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;   /** Description: Returns yes if the taxpayer is not cohabiting with his/her spouse. In French: &quot;Separation de fait&quot;. -  **/&#x9;&#xA;   let is_living_separately_by_court:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_BY_COURT) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;   /** Description: Returns yes if the taxpayer has a judicial sentence dismissing him from cohabiting with his/her spouse. In French: &quot;Separation de corps&quot;. -  **/&#x9;&#xA;   if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = false then&#xA;        let is_widower:Boolean = self.is_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;        /** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/&#x9;&#xA;        if (is_widower) = true then&#xA;               let spouse_death_year:Integer = self.last_start_year_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;               /** Description: Returns the year on which the spouse of the taxpayer past away. -  **/&#x9;&#xA;               if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = true then&#xA;               Tax_Class_Category::Two&#xA;               else&#xA;                  if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = false then&#xA;                  Tax_Class_Category::One_A&#xA;                  else&#xA;                  invalid&#xA;                  endif&#xA;               endif&#xA;        else&#xA;          if (is_widower) = false then&#xA;                  let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                  /** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/&#x9;&#xA;                  if (is_reciving_bonus_for_children) = true then&#xA;                  Tax_Class_Category::One_A&#xA;                  else&#xA;                    if (is_reciving_bonus_for_children) = false then&#xA;                              let taxpayer_age:Integer = self.getAge(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                              /** Description: Returns the age of a given taxpayer. -  **/&#x9;&#xA;                              if (taxpayer_age >= 64) = true then&#xA;                              Tax_Class_Category::One_A&#xA;                              else&#xA;                                 if (taxpayer_age >= 64) = false then&#xA;                                 Tax_Class_Category::One&#xA;                                 else&#xA;                                 invalid&#xA;                                 endif&#xA;                              endif&#xA;                    else&#xA;                    invalid&#xA;                    endif&#xA;                  endif&#xA;          else&#xA;          invalid&#xA;          endif&#xA;        endif&#xA;   else&#xA;     if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = true then&#xA;          let can_beneficiate_from_transition_state :Boolean = self.getDivorceTransitionState(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: Returns yes if: (1) the divorce/separation occurred within the last three years from the taxation year, and (2) the taxpayer did has not beneficiated from a divorce/separation transition state for the last five years from the current taxation year. -  **/&#x9;&#xA;          if (can_beneficiate_from_transition_state ) = false then&#xA;                  let is_widower:Boolean = self.is_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                  /** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/&#x9;&#xA;                  if (is_widower) = true then&#xA;                            let spouse_death_year:Integer = self.last_start_year_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                            /** Description: Returns the year on which the spouse of the taxpayer past away. -  **/&#x9;&#xA;                            if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = true then&#xA;                            Tax_Class_Category::Two&#xA;                            else&#xA;                              if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = false then&#xA;                              Tax_Class_Category::One_A&#xA;                              else&#xA;                              invalid&#xA;                              endif&#xA;                            endif&#xA;                  else&#xA;                    if (is_widower) = false then&#xA;                              let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                              /** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/&#x9;&#xA;                              if (is_reciving_bonus_for_children) = true then&#xA;                              Tax_Class_Category::One_A&#xA;                              else&#xA;                                 if (is_reciving_bonus_for_children) = false then&#xA;                                             let taxpayer_age:Integer = self.getAge(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                             /** Description: Returns the age of a given taxpayer. -  **/&#x9;&#xA;                                             if (taxpayer_age >= 64) = true then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                                if (taxpayer_age >= 64) = false then&#xA;                                                Tax_Class_Category::One&#xA;                                                else&#xA;                                                invalid&#xA;                                                endif&#xA;                                             endif&#xA;                                 else&#xA;                                 invalid&#xA;                                 endif&#xA;                              endif&#xA;                    else&#xA;                    invalid&#xA;                    endif&#xA;                  endif&#xA;          else&#xA;             if (can_beneficiate_from_transition_state ) = true then&#xA;             Tax_Class_Category::Two&#xA;             else&#xA;             invalid&#xA;             endif&#xA;          endif&#xA;     else&#xA;     invalid&#xA;     endif&#xA;   endif&#xA;else&#xA;   if (is_resident_taxpayer) = false then&#xA;     let is_married:Boolean = self.getIsMaried(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;     /** Description: Returns yes if the taxpayer is married. -  **/&#x9;&#xA;     if (is_married) = false then&#xA;          let is_divorced:Boolean = self.getSeperationState(taxation_year,Separation_Causes::DIVORCE) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: Returns yes if the taxpayer is divorced within the selected taxation year. -  **/&#x9;&#xA;          let is_living_separately:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_DE_FAIT) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: Returns yes if the taxpayer is not cohabiting with his/her spouse. In French: &quot;Separation de fait&quot;. -  **/&#x9;&#xA;          let is_living_separately_by_court:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_BY_COURT) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;          /** Description: Returns yes if the taxpayer has a judicial sentence dismissing him from cohabiting with his/her spouse. In French: &quot;Separation de corps&quot;. -  **/&#x9;&#xA;          if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = false then&#xA;                  let is_widower:Boolean = self.is_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                  /** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/&#x9;&#xA;                  if (is_widower) = true then&#xA;                            let spouse_death_year:Integer = self.last_start_year_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                            /** Description: Returns the year on which the spouse of the taxpayer past away. -  **/&#x9;&#xA;                            if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = true then&#xA;                            Tax_Class_Category::Two&#xA;                            else&#xA;                              if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = false then&#xA;                              Tax_Class_Category::One_A&#xA;                              else&#xA;                              invalid&#xA;                              endif&#xA;                            endif&#xA;                  else&#xA;                    if (is_widower) = false then&#xA;                              let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                              /** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/&#x9;&#xA;                              if (is_reciving_bonus_for_children) = true then&#xA;                              Tax_Class_Category::One_A&#xA;                              else&#xA;                                 if (is_reciving_bonus_for_children) = false then&#xA;                                             let taxpayer_age:Integer = self.getAge(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                             /** Description: Returns the age of a given taxpayer. -  **/&#x9;&#xA;                                             if (taxpayer_age >= 64) = true then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                                if (taxpayer_age >= 64) = false then&#xA;                                                Tax_Class_Category::One&#xA;                                                else&#xA;                                                invalid&#xA;                                                endif&#xA;                                             endif&#xA;                                 else&#xA;                                 invalid&#xA;                                 endif&#xA;                              endif&#xA;                    else&#xA;                    invalid&#xA;                    endif&#xA;                  endif&#xA;          else&#xA;             if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = true then&#xA;                    let can_beneficiate_from_transition_state :Boolean = self.getDivorceTransitionState(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    /** Description: Returns yes if: (1) the divorce/separation occurred within the last three years from the taxation year, and (2) the taxpayer did has not beneficiated from a divorce/separation transition state for the last five years from the current taxation year. -  **/&#x9;&#xA;                    if (can_beneficiate_from_transition_state ) = false then&#xA;                              let is_widower:Boolean = self.is_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                              /** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/&#x9;&#xA;                              if (is_widower) = true then&#xA;                                           let spouse_death_year:Integer = self.last_start_year_widower in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                           /** Description: Returns the year on which the spouse of the taxpayer past away. -  **/&#x9;&#xA;                                           if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = true then&#xA;                                           Tax_Class_Category::Two&#xA;                                           else&#xA;                                             if (spouse_death_year &lt;= taxation_year and spouse_death_year >= taxation_year -3) = false then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                             invalid&#xA;                                             endif&#xA;                                           endif&#xA;                              else&#xA;                                 if (is_widower) = false then&#xA;                                             let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                             /** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/&#x9;&#xA;                                             if (is_reciving_bonus_for_children) = true then&#xA;                                             Tax_Class_Category::One_A&#xA;                                             else&#xA;                                                if (is_reciving_bonus_for_children) = false then&#xA;                                                               let taxpayer_age:Integer = self.getAge(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                                                               /** Description: Returns the age of a given taxpayer. -  **/&#x9;&#xA;                                                               if (taxpayer_age >= 64) = true then&#xA;                                                               Tax_Class_Category::One_A&#xA;                                                               else&#xA;                                                                 if (taxpayer_age >= 64) = false then&#xA;                                                                 Tax_Class_Category::One&#xA;                                                                 else&#xA;                                                                 invalid&#xA;                                                                 endif&#xA;                                                               endif&#xA;                                                else&#xA;                                                invalid&#xA;                                                endif&#xA;                                             endif&#xA;                                 else&#xA;                                 invalid&#xA;                                 endif&#xA;                              endif&#xA;                    else&#xA;                       if (can_beneficiate_from_transition_state ) = true then&#xA;                       Tax_Class_Category::Two&#xA;                       else&#xA;                       invalid&#xA;                       endif&#xA;                    endif&#xA;             else&#xA;             invalid&#xA;             endif&#xA;          endif&#xA;     else&#xA;        if (is_married) = true then&#xA;             let total_professional_income_household:Real = self.getProfetionalIncomeHousehold(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;             /** Description: Returns the sum of the taxpayer's household professional incomes. -  **/&#x9;&#xA;             let sum_professional_income_household_Luxembourg:Real = self.getProfetionalIncomeHouseholdLuxembourg(taxation_year) in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;             /** Description: Returns the sum of the taxpayer's household professional incomes that are taxed in Luxembourg. -  **/&#x9;&#xA;             if (sum_professional_income_household_Luxembourg > (0.5 * total_professional_income_household)) = true then&#xA;             Tax_Class_Category::Two&#xA;             else&#xA;               if (sum_professional_income_household_Luxembourg > (0.5 * total_professional_income_household)) = false then&#xA;               Tax_Class_Category::One_A&#xA;               else&#xA;               invalid&#xA;               endif&#xA;             endif&#xA;        else&#xA;        invalid&#xA;        endif&#xA;     endif&#xA;   else&#xA;   invalid&#xA;   endif&#xA;   endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_vXX-wDUKEeWdc7hBYHG85A" type="Tax_Class_Category" direction="return"/>
        <ownedParameter xmi:id="_KIDL8DULEeWdc7hBYHG85A" name="taxation_year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_LtaAMDULEeWdc7hBYHG85A" value=""/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Physical_Person" name="Physical_Person">
      <ownedAttribute xmi:id="Physical_Person-name" name="name" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Physical_Person-is_assisting_spouse" name="is_assisting_spouse" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Physical_Person-SSNo" name="SSNo" visibility="public" isOrdered="true" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Physical_Person-addresses" name="addresses" type="Address" association="_packagedElement.19">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Physical_Person-addresses-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Physical_Person-addresses-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Physical_Person-age" name="birth_year" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Physical_Person-disability_percentage" name="disability_percentage" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Physical_Person-disability_type" name="disability_type" visibility="public" type="Disability_Types" isUnique="false"/>
      <ownedAttribute xmi:id="Physical_Person-is_affiliated_personnaly_to_social_security" name="is_affiliated_personnaly_to_social_security" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_O9uyUIOfEeSemtkAhxylbQ" name="birth_month" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_SaZtgIOfEeSemtkAhxylbQ" name="birth_day" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Mr92cZN2EeSS6JjHMC2a3A" name="expenses" type="Expense" association="_Mr92cJN2EeSS6JjHMC2a3A">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mr92cpN2EeSS6JjHMC2a3A"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mr92c5N2EeSS6JjHMC2a3A" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_wyM3MD9AEeW8kvq1XD0XnA" name="is_widower">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0xtZsD9AEeW8kvq1XD0XnA" name="last_start_year_widower">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Physical_Person-is_separated_from" name="is_separated_from" visibility="public">
        <ownedParameter xmi:id="Physical_Person-is_separated_from-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Physical_Person-is_separated_from-IN_person" name="IN_person" type="Physical_Person" isOrdered="true"/>
      </ownedOperation>
      <ownedOperation xmi:id="Physical_Person-is_person_affiliated_personnaly_to_social_security" name="is_person_affiliated_personnaly_to_social_security" visibility="public">
        <ownedParameter xmi:id="Physical_Person-is_person_affiliated_personnaly_to_social_security-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_7PmiMIObEeSemtkAhxylbQ" name="getSeperationState">
        <eAnnotations xmi:id="_ex2SsIOcEeSemtkAhxylbQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_gSRjoIOcEeSemtkAhxylbQ" key="body" value="let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select(individual_A=self or individual_B=self) in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(legel_unions->size()=0) then&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year&lt;=year)in&#xA;&#x9;&#x9;&#x9;let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in&#xA;&#x9;&#x9;&#x9;if(lasted_union.end_year=-1)then&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;lasted_union.separation_cause=seperation_type&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_BNEmMIOcEeSemtkAhxylbQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_C4uPsIOcEeSemtkAhxylbQ" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_VgXnsIVGEeSXX-HVERRl8A" name="seperation_type" type="_7auHsIOIEeSemtkAhxylbQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_svP6UIOfEeSemtkAhxylbQ" name="getAge" isQuery="true">
        <eAnnotations xmi:id="_24R_0IOfEeSemtkAhxylbQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_4ZsvQIOfEeSemtkAhxylbQ" key="body" value="&#x9;if(birth_year>=year )then&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;year-birth_year&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedRule xmi:id="_-Y-pYA0bEeiyiN2N51a0dQ" name="Constraint1">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_-ZHMQA0bEeiyiN2N51a0dQ" name="constraintSpec">
            <language>OCL</language>
            <body>self.birth_year</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_w5bbwIOfEeSemtkAhxylbQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_yVl3wIOfEeSemtkAhxylbQ" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_itvRwIOiEeSemtkAhxylbQ" name="getIsMaried">
        <eAnnotations xmi:id="_rPug8IOiEeSemtkAhxylbQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_sDYLcIOiEeSemtkAhxylbQ" key="body" value="&#x9;let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select( ((individual_A=self or individual_B=self) and oclIsKindOf(Marriage_Record))) in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(legel_unions->size()=0) then&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year&lt;=year)in&#xA;&#x9;&#x9;&#x9;let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in&#xA;&#x9;&#x9;&#x9;if(lasted_union.end_year=-1)then&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_mvOxQIOiEeSemtkAhxylbQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oHdIcIOiEeSemtkAhxylbQ" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vR4b4IOvEeSN9uRKzOYzEA" name="getSeperationYear">
        <eAnnotations xmi:id="_4u_PgIOvEeSN9uRKzOYzEA" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_5dPcoIOvEeSN9uRKzOYzEA" key="body" value="let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select(individual_A=self or individual_B=self) in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(legel_unions->size()=0) then&#xA;&#x9;&#x9;&#x9;-1&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year&lt;=year)in&#xA;&#x9;&#x9;&#x9;let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in&#xA;&#x9;&#x9;&#x9;if(lasted_union.oclIsUndefined()) then&#xA;&#x9;&#x9;&#x9;-1&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if(lasted_union.end_year=-1)then&#xA;&#x9;&#x9;&#x9;-1&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;lasted_union.end_year&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_zxMf0IOvEeSN9uRKzOYzEA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_xdohwIOvEeSN9uRKzOYzEA" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_J87swIOxEeSN9uRKzOYzEA" name="getDivorceTransitionState">
        <eAnnotations xmi:id="_T2TloIOxEeSN9uRKzOYzEA" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_Uv4R8IOxEeSN9uRKzOYzEA" key="body" value="let sep_year:Integer=self.getSeperationYear(year) in&#xA;&#x9;&#x9;&#x9;if(sep_year=-1)then&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if( (sep_year &lt;= year and sep_year >= (year -3))=false) then&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let past_sep_year:Integer=self.getSeperationYear(year-5) in&#xA;&#x9;&#x9;&#x9;if(past_sep_year=-1)then&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_NYDIwIOxEeSN9uRKzOYzEA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RDT5kIOxEeSN9uRKzOYzEA" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lsXLwIOyEeSN9uRKzOYzEA" name="getSpouse">
        <eAnnotations xmi:id="_vi9dcIOyEeSN9uRKzOYzEA" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_w3dLMIOyEeSN9uRKzOYzEA" key="body" value="&#x9;let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select( ((individual_A=self or individual_B=self))) in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(legel_unions->size()=0) then&#xA;&#x9;&#x9;&#x9;let union:Legal_Union_Record=self.getLegalUnionRecord(year) in &#xA;&#x9;&#x9;&#x9;if(union.oclIsInvalid())then&#xA;&#x9;&#x9;&#x9;invalid&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;        if(union.individual_B=self) then union.individual_A.oclAsType(Physical_Person) else union.individual_B.oclAsType(Physical_Person) endif endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year&lt;=year)in&#xA;&#x9;&#x9;&#x9;let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in&#xA;&#x9;&#x9;&#x9;if(lasted_union.end_year=-1)then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(lasted_union.individual_A=self)then&#xA;&#x9;&#x9;&#x9;lasted_union.individual_B&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;lasted_union.individual_A&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;invalid&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedRule xmi:id="_nYYwYOcXEeauVdC-0G-XUw" name="OperationGetSpouse">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPN8YOcYEeauVdC-0G-XUw">
            <language>OCL</language>
            <body>let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select( ((individual_A=self or individual_B=self))) in
			
			if(legel_unions->size()=0) then
			let union:Legal_Union_Record=self.getLegalUnionRecord(year) in 
			if(union.oclIsInvalid())then
			invalid
			else
	        if(union.individual_B=self) then union.individual_A.oclAsType(Physical_Person) else union.individual_B.oclAsType(Physical_Person) endif endif
			else
			let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year&lt;=year)in
			let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in
			if(lasted_union.end_year=-1)then
			
			if(lasted_union.individual_A=self)then
			lasted_union.individual_B
			else
			lasted_union.individual_A
			endif
			else
			invalid
			endif
			endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_pF7IkIOyEeSN9uRKzOYzEA" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rqTJ0IOyEeSN9uRKzOYzEA" type="Physical_Person" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_k2rLQIqUEeSCrr7uegGAVw" name="getLegalUnionRecord">
        <eAnnotations xmi:id="_ZOFFkIqWEeSCrr7uegGAVw" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_ZkZT0IqWEeSCrr7uegGAVw" key="body" value="let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select( ((individual_A=self or individual_B=self))) in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(legel_unions->size()=0) then&#xA;&#x9;&#x9;&#x9;invalid&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year&lt;=year)in&#xA;&#x9;&#x9;&#x9;let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in&#xA;&#x9;&#x9;&#x9;lasted_union&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedRule xmi:id="_TQVdAOcXEeauVdC-0G-XUw" name="OperationgetLegalUnionRecord">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_VuRfEOcXEeauVdC-0G-XUw">
            <language>OCL</language>
            <body>let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select( ((individual_A=self or individual_B=self))) in
			
			if(legel_unions->size()=0) then
			invalid
			else
			let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year&lt;=year)in
			let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in
			if(lasted_union.end_year=-1)then
			lasted_union
			else
			invalid
			endif
			endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_rUwB8IqUEeSCrr7uegGAVw" type="Legal_Union_Record" direction="return"/>
        <ownedParameter xmi:id="_tgL-wIqUEeSCrr7uegGAVw" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uZexoAaKEeiboID58fEdIQ" name="Fib" isQuery="true">
        <eAnnotations xmi:id="_R5vlIAaLEeiboID58fEdIQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_TfmIoAaLEeiboID58fEdIQ" key="body" value="if (inn = 0 or inn = 1) then&#xA;inn&#xA;else &#xA;Fib(inn-1) + Fib(inn-2)&#xA;endif"/>
        </eAnnotations>
        <ownedRule xmi:id="_72eiQAaKEeiboID58fEdIQ" name="Constraint1">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72jawAaKEeiboID58fEdIQ" name="constraintSpec">
            <language>OCL</language>
            <body>if (inn = 0 or inn = 1) then
inn
else 
Fib(inn-1) + Fib(inn-2)
endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2pW9IAaKEeiboID58fEdIQ" name="inn">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_6Y04gAaKEeiboID58fEdIQ" name="res" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="External_Allowance" name="External_Allowance">
      <ownedAttribute xmi:id="External_Allowance-amount" name="amount" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="External_Allowance-grantor" name="grantor" visibility="public" type="Grantor" isOrdered="true"/>
      <ownedAttribute xmi:id="_6K5ewIOtEeSemtkAhxylbQ" name="starting_year">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_ys1IMYnjEeS51qv-dTzbfg" name="person" type="Dependent" association="_ys1IMInjEeS51qv-dTzbfg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ys1IMonjEeS51qv-dTzbfg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ys1IM4njEeS51qv-dTzbfg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_IoNagD93EeWzD95_WvVH8Q" name="ending_year">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_4QQ94T-FEeWJhua38hb9gw" name="reciver" type="Physical_Person" association="_4QQ94D-FEeWJhua38hb9gw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4QQ94j-FEeWJhua38hb9gw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4QQ94z-FEeWJhua38hb9gw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_hkbH8EzrEeaVApgXPK28xA" name="id5" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_TfjvEEaVEeavk_GdzuNzKw" name="getAmount">
        <eAnnotations xmi:id="_jesP0EaWEeavk_GdzuNzKw" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_ljqYQEaWEeavk_GdzuNzKw" key="body" value=" if(dep_age>=6 and dep_age&lt;=11) then&#xA;(base + 16.17).round()&#xA;  else if (dep_age>=12) then (base + 48.52).round() else &#xA;  if(is_disabled) then(base + 185.60).round() else base endif endif endif"/>
        </eAnnotations>
        <ownedRule xmi:id="_8p-z0OcZEeauVdC-0G-XUw" name="OperationGetAmount">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_BDr_AOcaEeauVdC-0G-XUw">
            <language>OCL</language>
            <body>if(dep_age>=6 and dep_age&lt;=11) then
 round_lower_euros(base + 16.17)
  else if (dep_age>=12) then round_lower_euros(base + 48.52) else 
  if(is_disabled) then round_lower_euros(base + 185.60) else base endif endif endif
  </body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_bUH3kEaVEeavk_GdzuNzKw" name="base">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
        <ownedParameter xmi:id="_iY7-IEaVEeavk_GdzuNzKw" name="dep_age">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lRXj0EaVEeavk_GdzuNzKw" name="is_disabled">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_nQ8O4EaVEeavk_GdzuNzKw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3D6jIEa7Eea5Zpk5ulXFgA" name="round_lower_euros">
        <eAnnotations xmi:id="_DEmGwEa8Eea5Zpk5ulXFgA" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_Dd_eMEa8Eea5Zpk5ulXFgA" key="body" value="let p1:Integer = amount.floor() in&#xA;&#x9;&#x9;&#x9;p1.toString().toReal()"/>
        </eAnnotations>
        <ownedRule xmi:id="_v16rcOcZEeauVdC-0G-XUw" name="OperationRound">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_7un-0OcZEeauVdC-0G-XUw">
            <language>OCL</language>
            <body>let p1:Integer = amount.floor() in
			p1.toString().toReal()
			</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_8t_xEEa7Eea5Zpk5ulXFgA" name="amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-ofH0Ea7Eea5Zpk5ulXFgA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Address" name="Address">
      <ownedAttribute xmi:id="Address-country" name="country" visibility="public" type="Country" isOrdered="true">
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="Address-country-_defaultValue" type="Country" instance="Country-LU"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Address-street" name="street" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Address-zipCode" name="zipCode" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Address-city" name="city" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Address-taxPayer" name="taxPayer" type="Physical_Person" association="_packagedElement.19">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yIC2QEKuEeaQU66UNd8S3g"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Address-taxPayer-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_CbKw8EzrEeaVApgXPK28xA" name="id2" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.19" memberEnd="Address-taxPayer Physical_Person-addresses"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Legal_Union_Record" name="Legal_Union_Record" isAbstract="true">
      <ownedAttribute xmi:id="Legal_Union_Record-start_date" name="start_year" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Legal_Union_Record-end_date" name="end_year" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_HlxS0IOKEeSemtkAhxylbQ" name="separation_cause" type="_7auHsIOIEeSemtkAhxylbQ"/>
      <ownedAttribute xmi:id="_oA2J8YXuEeSLiOAbrK2uyQ" name="household" type="Household" association="_oA2J8IXuEeSLiOAbrK2uyQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oA2J8oXuEeSLiOAbrK2uyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oA2J84XuEeSLiOAbrK2uyQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_5YyQ4IYUEeS819S0h0iEVw" name="individual_A" type="Physical_Person" aggregation="composite" association="_5Yy38IYUEeS819S0h0iEVw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5YyQ4YYUEeS819S0h0iEVw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5YyQ4oYUEeS819S0h0iEVw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0ISLIIYVEeS819S0h0iEVw" name="individual_B" type="Physical_Person" aggregation="composite" association="_0ISyMIYVEeS819S0h0iEVw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ISLIYYVEeS819S0h0iEVw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ISLIoYVEeS819S0h0iEVw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9Cy7kYqVEeSCrr7uegGAVw" name="properties" type="_0yLxwIH5EeSH_sby466C_w" aggregation="composite" association="_9Cy7kIqVEeSCrr7uegGAVw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9Cy7koqVEeSCrr7uegGAVw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9Cy7k4qVEeSCrr7uegGAVw" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9ht2oJNxEeSZisr9dyMXhQ" name="mutual_agreement">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_bMrYMEzqEeaVApgXPK28xA" name="id9" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Dependent" name="Dependent">
      <generalization xmi:id="Dependent-_generalization.0" general="Physical_Person"/>
      <ownedAttribute xmi:id="Dependent-dependent_type" name="dependent_type" visibility="public" type="Dependent_Type" isOrdered="true"/>
      <ownedAttribute xmi:id="Dependent-responsible_person" name="responsible_person" type="Tax_Payer" isOrdered="true" association="_packagedElement.27">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_n22L0EN1EeaU2b-bUHDWlA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n23Z8EN1EeaU2b-bUHDWlA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Dependent-continued_studies" name="continued_studies" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Dependent-continued_studies-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Dependent-expense" name="expense" type="Expense" association="_packagedElement.31">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Dependent-expense-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Dependent-expense-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_ysz6EInjEeS51qv-dTzbfg" name="allowances" type="External_Allowance" aggregation="composite" association="_ys1IMInjEeS51qv-dTzbfg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ysz6EYnjEeS51qv-dTzbfg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ysz6EonjEeS51qv-dTzbfg" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_tLMGQZASEeSrKuFMY7nEzg" name="household" type="Household" association="_tLMGQJASEeSrKuFMY7nEzg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_tLMGQpASEeSrKuFMY7nEzg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tLMGQ5ASEeSrKuFMY7nEzg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_suTZgJLREeSsDc98mGjcqQ" name="from_agent" type="FromAgent" association="_suXD4JLREeSsDc98mGjcqQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_suTZgZLREeSsDc98mGjcqQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_suTZgpLREeSsDc98mGjcqQ" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Dependent-compute_if_dependent_receives_allowances_eligible_for_CIM" name="compute_if_dependent_receives_allowances_eligible_for_CIM" visibility="public">
        <ownedParameter xmi:id="Dependent-compute_if_dependent_receives_allowances_eligible_for_CIM-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Dependent-compute_if_dependent_receives_allowances_eligible_for_DS" name="compute_if_dependent_receives_allowances_eligible_for_DS" visibility="public">
        <ownedParameter xmi:id="Dependent-compute_if_dependent_receives_allowances_eligible_for_DS-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Dependent-compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" visibility="public">
        <ownedParameter xmi:id="Dependent-compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Dependent-is_dependent_following_continued_studies" name="is_dependent_following_continued_studies" visibility="public">
        <ownedParameter xmi:id="Dependent-is_dependent_following_continued_studies-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Dependent-is_dependent_following_continued_studies-IN_continued_studies" name="IN_continued_studies" isOrdered="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Household" name="Household">
      <ownedAttribute xmi:id="_oAwqYIXuEeSLiOAbrK2uyQ" name="parents" type="Legal_Union_Record" aggregation="composite" association="_oA2J8IXuEeSLiOAbrK2uyQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oAwqYYXuEeSLiOAbrK2uyQ" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oAwqYoXuEeSLiOAbrK2uyQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_tLDjYJASEeSrKuFMY7nEzg" name="children" type="Dependent" aggregation="composite" association="_tLMGQJASEeSrKuFMY7nEzg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_tLDjYZASEeSrKuFMY7nEzg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tLDjYpASEeSrKuFMY7nEzg" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Rt8M4EzqEeaVApgXPK28xA" name="id1" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_Vn4jsIXwEeSLiOAbrK2uyQ" client="Household" supplier="_1gja4IXvEeSLiOAbrK2uyQ" contract="_1gja4IXvEeSLiOAbrK2uyQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.27" memberEnd="Tax_Payer-dependents Dependent-responsible_person"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Expense" name="Expense">
      <ownedAttribute xmi:id="Expense-declared_amount" name="declared_amount" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Expense-expense_purpose" name="expense_purpose" visibility="public" type="Expense_Purpose" isOrdered="true">
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="Expense-expense_purpose-_defaultValue" type="Expense_Purpose" instance="Expense_Purpose-OTHER"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Expense-dependent" name="dependent" type="Dependent" isOrdered="true" association="_packagedElement.31">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Expense-dependent-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Expense-year_expense_was_incurred_in" name="year_expense_was_incurred_in" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Mr8oUJN2EeSS6JjHMC2a3A" name="beneficiary" type="Physical_Person" association="_Mr92cJN2EeSS6JjHMC2a3A">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mr8oUZN2EeSS6JjHMC2a3A"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mr8oUpN2EeSS6JjHMC2a3A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_bpLVMZQ9EeSMZqrJQmR94g" name="from_agent" type="FromAgent" aggregation="composite" association="_bpLVMJQ9EeSMZqrJQmR94g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_bpLVMpQ9EeSMZqrJQmR94g"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_bpLVM5Q9EeSMZqrJQmR94g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Expense-income" name="income" type="Income" isOrdered="true" association="_packagedElement.50">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Expense-income-_lowerValue" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1aYooOKNEeSbvsXPkSdkbw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_dGLbAEzrEeaVApgXPK28xA" name="id4" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.31" memberEnd="Expense-dependent Dependent-expense"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Income" name="Income" isAbstract="true">
      <ownedAttribute xmi:id="Income-income_amount" name="income_amount" visibility="package" isUnique="false">
        <eAnnotations xmi:id="Income-income_amount-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Income-income_amount-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="derivation" value="let non_null_amounts:OrderedSet(Income_Detail)=self.details->select(det:Income_Detail|det.amount>0)->asOrderedSet() in&#xA;non_null_amounts->collect(amount)->min()"/>
        </eAnnotations>
        <ownedComment xmi:id="Income-income_amount-_ownedComment.0" annotatedElement="Income-income_amount">
          <body>let non_null_amounts:OrderedSet(Income_Detail)=self.details->select(det:Income_Detail|det.amount>0)->asOrderedSet() in
non_null_amounts->collect(amount)->min() </body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income-income_type" name="income_type" type="Income_Type" isOrdered="true" aggregation="composite" association="_packagedElement.34"/>
      <ownedAttribute xmi:id="Income-start_date_within_taxation_year" name="start_date_within_taxation_year" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDate"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income-start_date_of_contract" name="start_date_of_contract" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDate"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income-end_date_within_taxation_year" name="end_date_within_taxation_year" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDate"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income-tax_card" name="tax_card" type="Tax_Card" isOrdered="true" aggregation="composite" association="_packagedElement.49">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Income-tax_card-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income-expenses" name="expenses" type="Expense" aggregation="composite" association="_packagedElement.50">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Income-expenses-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Income-expenses-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income-tax_liability" name="tax_liability" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income-taxPayer" name="taxPayer" type="Tax_Payer" association="_packagedElement.51"/>
      <ownedAttribute xmi:id="Income-year" name="year" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income-details" name="details" type="Income_Detail" isOrdered="true" aggregation="composite" association="_packagedElement.53">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Income-details-_lowerValue" value="12"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Income-details-_upperValue" value="12"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_X0tv8Ld6EeSVy4vFID_wcg" name="num" visibility="public" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_djq20Ld6EeSVy4vFID_wcg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_djsE8Ld6EeSVy4vFID_wcg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LlDswDn-EeWS2a--AKriEw" name="start_year">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Income-compute_duration_of_contract" name="compute_duration_of_contract" visibility="public">
        <ownedParameter xmi:id="Income-compute_duration_of_contract-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigInteger"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Income-compute_duration_of_contract_within_taxation_year" name="compute_duration_of_contract_within_taxation_year" visibility="public">
        <ownedParameter xmi:id="Income-compute_duration_of_contract_within_taxation_year-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigInteger"/>
        </ownedParameter>
        <ownedParameter xmi:id="Income-compute_duration_of_contract_within_taxation_year-IN_date" name="IN_date" isOrdered="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDate"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Income-prorata_worked_months" name="prorata_worked_months" visibility="public">
        <eAnnotations xmi:id="Income-prorata_worked_months-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Income-prorata_worked_months-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="self.details->select(is_worked)->size()"/>
        </eAnnotations>
        <ownedComment xmi:id="Income-prorata_worked_months-_ownedComment.0" annotatedElement="Income-prorata_worked_months">
          <body>operation def</body>
        </ownedComment>
        <ownedParameter xmi:id="Income-prorata_worked_months-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigInteger"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Income-prorata_worked_days" name="prorata_worked_days" visibility="public">
        <eAnnotations xmi:id="Income-prorata_worked_days-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Income-prorata_worked_days-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="let a:Set(Income_Detail)=self.details->select(is_worked) in  &#xA;&#x9;&#x9;&#x9;a.worked_days->sum().mod(25)"/>
        </eAnnotations>
        <ownedComment xmi:id="Income-prorata_worked_days-_ownedComment.0" annotatedElement="Income-prorata_worked_days">
          <body>operation def</body>
        </ownedComment>
        <ownedParameter xmi:id="Income-prorata_worked_days-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigInteger"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Income-prorata_period" name="prorata_period" visibility="public">
        <eAnnotations xmi:id="Income-prorata_period-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Income-prorata_period-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="&#xA;&#x9;&#x9;&#x9;let nb_months:Integer=self.prorata_worked_months()in&#xA;&#x9;&#x9;&#x9;let nb_days:Integer=self.prorata_worked_days()in&#xA;&#x9;&#x9;&#x9; if(nb_months=12) then&#xA;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;nb_months/12 + nb_days/300&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="Income-prorata_period-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Income-income_per_day" name="income_per_day" visibility="public">
        <eAnnotations xmi:id="Income-income_per_day-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Income-income_per_day-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="income_per_year()/300"/>
        </eAnnotations>
        <ownedComment xmi:id="Income-income_per_day-_ownedComment.0" annotatedElement="Income-income_per_day">
          <body>operation deft</body>
        </ownedComment>
        <ownedParameter xmi:id="Income-income_per_day-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Income-income_per_month" name="income_per_month" visibility="public">
        <eAnnotations xmi:id="Income-income_per_month-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Income-income_per_month-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="income_per_year()/12"/>
        </eAnnotations>
        <ownedComment xmi:id="Income-income_per_month-_ownedComment.0" annotatedElement="Income-income_per_month">
          <body>operation deft</body>
        </ownedComment>
        <ownedParameter xmi:id="Income-income_per_month-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Income-income_per_year" name="income_per_year" visibility="public">
        <eAnnotations xmi:id="Income-income_per_year-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Income-income_per_year-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="&#x9;&#x9;&#x9;let involved_details:Set(Income_Detail)=self.details->select(i:Income_Detail| i.is_worked=true) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;involved_details.amount->sum()"/>
        </eAnnotations>
        <ownedComment xmi:id="Income-income_per_year-_ownedComment.0" annotatedElement="Income-income_per_year">
          <body>operation deft</body>
        </ownedComment>
        <ownedParameter xmi:id="Income-income_per_year-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_XgXlMDofEeWWiJDOmt7xhQ" name="getDurationInyears">
        <eAnnotations xmi:id="_gXYpMDofEeWWiJDOmt7xhQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_iP7fMDofEeWWiJDOmt7xhQ" key="body" value="&#xA;&#x9;&#x9;&#x9;if(self.income_type.oclIsTypeOf(Pensions_and_Annuities_Income)) then &#xA;&#x9;&#x9;&#x9;if(start_year.oclIsUndefined())then&#xA;&#x9;&#x9;&#x9;-1&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let res:Integer=self.taxPayer.from_agent.taxation_year-start_year in&#xA;&#x9;&#x9;&#x9;if(res&lt;0) then&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;res&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;-1&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_a5VsIDofEeWWiJDOmt7xhQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Income_Type" name="Income_Type" isAbstract="true">
      <ownedAttribute xmi:id="Income_Type-income" name="income" type="Income" isOrdered="true" association="_packagedElement.34"/>
      <ownedAttribute xmi:id="Income_Type-subjectToWithholdingTax" name="subjectToWithholdingTax" visibility="public" isOrdered="true" isDerived="true">
        <eAnnotations xmi:id="Income_Type-subjectToWithholdingTax-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Income_Type-subjectToWithholdingTax-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="derivation" value="&#xA;&#x9;&#x9;&#x9;&#x9;self.income.tax_card->notEmpty()&#xA;&#x9;&#x9;&#x9;&#x9;"/>
        </eAnnotations>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_DQ8-4EzqEeaVApgXPK28xA" name="id8" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.34" memberEnd="Income-income_type Income_Type-income"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Tax_Card" name="Tax_Card">
      <ownedAttribute xmi:id="Tax_Card-card_identifier" name="card_identifier" visibility="public" isOrdered="true" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xd0PYJHnEeWJZtt1pWzjeQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xd1dgJHnEeWJZtt1pWzjeQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-tax_card_type" name="tax_card_type" visibility="public" type="Tax_Card_Type" isOrdered="true" isDerived="true">
        <eAnnotations xmi:id="Tax_Card-tax_card_type-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Tax_Card-tax_card_type-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="derivation" value="if(self.income.taxPayer.incomes->size()=1) then &#xA;Tax_Card_Type::Principal&#xA;&#x9;else&#xA;&#x9;&#x9;let all_incomes:OrderedSet(Income)=self.income.taxPayer.incomes->select(inc:Income| inc.income_amount= self.income.taxPayer.incomes.income_amount->max())->asOrderedSet() in&#xA;&#x9;&#x9;let bigest_income:Income= all_incomes->first() in&#xA;&#x9;&#x9;&#x9;    if(bigest_income=self.income) then&#xA;&#x9;&#x9;&#x9;   &#x9; Tax_Card_Type::Principal&#xA;&#x9;&#x9;&#x9;    else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Tax_Card_Type::Additional&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;endif&#xA;&#x9;&#x9;&#x9;&#x9;"/>
        </eAnnotations>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-tax_office" name="tax_office" visibility="public" type="Tax_Office" isOrdered="true"/>
      <ownedAttribute xmi:id="Tax_Card-valid_from_date" name="valid_from_date" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDate"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-valid_until_date" name="valid_until_date" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDate"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-percentage_of_witholding" name="percentage_of_witholding" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-tax_payers_name_surname" name="tax_payers_name_surname" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Tax_Card-tax_payers_name_surname-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Tax_Card-tax_payers_name_surname-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-tax_payers_partner_name_surname" name="tax_payers_partner_name_surname" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Tax_Card-tax_payers_partner_name_surname-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Tax_Card-tax_payers_partner_name_surname-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-tax_payers_address" name="tax_payers_address" type="Address" isOrdered="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_tnXU0EK4EeaQU66UNd8S3g"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tnX74EK4EeaQU66UNd8S3g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-jobs_Employer_SSNo" name="jobs_Employer_SSNo" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3tgkwELAEeaQU66UNd8S3g"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3thL0ELAEeaQU66UNd8S3g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-jobs_employers_name" name="jobs_employers_name" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5qhrEELAEeaQU66UNd8S3g"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5qhrEULAEeaQU66UNd8S3g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-jobs_activity_type" name="jobs_activity_type" visibility="public" type="Job_Activity" isOrdered="true"/>
      <ownedAttribute xmi:id="Tax_Card-jobs_place_of_work" name="jobs_place_of_work" visibility="public" type="Town" isOrdered="true"/>
      <ownedAttribute xmi:id="Tax_Card-deduction_FD_daily" name="deduction_FD_daily" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_FD_daily-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_FD_monthly" name="deduction_FD_monthly" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_FD_monthly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_FD_yearly" name="deduction_FD_yearly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_FD_yearly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_AC_daily" name="deduction_AC_daily" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_AC_daily-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_AC_monthly" name="deduction_AC_monthly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_AC_monthly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_AC_yearly" name="deduction_AC_yearly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_AC_yearly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_CE_daily" name="deduction_CE_daily" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_CE_daily-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_CE_monthly" name="deduction_CE_monthly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_CE_monthly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_CE_yearly" name="deduction_CE_yearly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_CE_yearly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_CE_invalidity_yearly" name="deduction_CE_invalidity_yearly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_CE_invalidity_yearly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_DS_daily" name="deduction_DS_daily" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_DS_daily-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_DS_monthly" name="deduction_DS_monthly" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_DS_monthly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_DS_yearly" name="deduction_DS_yearly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_DS_yearly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_FO_daily" name="deduction_FO_daily" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_FO_daily-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_FO_monthly" name="deduction_FO_monthly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_FO_monthly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-deduction_FO_yearly" name="deduction_FO_yearly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-deduction_FO_yearly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-credit_CIS_daily" name="credit_CIS_daily" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-credit_CIS_daily-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-credit_CIS_monthly" name="credit_CIS_monthly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-credit_CIS_monthly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-credit_CIP_monthly" name="credit_CIP_monthly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-credit_CIP_monthly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-credit_CIP_yearly" name="credit_CIP_yearly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-credit_CIP_yearly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-credit_CIM_daily" name="credit_CIM_daily" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-credit_CIM_daily-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-credit_CIM_monthly" name="credit_CIM_monthly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-credit_CIM_monthly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-credit_CIS_yearly" name="credit_CIS_yearly" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Tax_Card-credit_CIS_yearly-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-validity" name="validity" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-income_Tax_Credit" name="income_Tax_Credit" type="Income_Tax_Credit" association="_packagedElement.43">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Tax_Card-income_Tax_Credit-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Tax_Card-income_Tax_Credit-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-previous" name="previous" type="Tax_Card" isOrdered="true" association="_packagedElement.48">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Tax_Card-previous-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-current_tax_card" name="current_tax_card" type="Tax_Card" isOrdered="true" association="_packagedElement.48">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uUHzgELAEeaQU66UNd8S3g"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uUIakELAEeaQU66UNd8S3g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Tax_Card-income" name="income" type="Income" isOrdered="true" association="_packagedElement.49"/>
      <ownedAttribute xmi:id="_SFQCkJD1EeSMh_pkRTiRPQ" name="credit_CIM_yearly">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_s_isgJNrEeSZisr9dyMXhQ" name="deduction_DS_Alimony_yearly">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_iIM5AJQ7EeSMZqrJQmR94g" name="deduction_DS_Debt_yearly">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_E3gpkIxNEeSQ-eW2JAQJHg" name="getSumDeductionsYear">
        <eAnnotations xmi:id="_OxHzAIxNEeSQ-eW2JAQJHg" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_Use-MIxNEeSQ-eW2JAQJHg" key="body" value="deduction_FO_yearly+deduction_FD_yearly+deduction_CE_invalidity_yearly"/>
        </eAnnotations>
        <ownedParameter xmi:id="_LKXuwIxNEeSQ-eW2JAQJHg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_r7hdAJD1EeSMh_pkRTiRPQ" name="getSumCreditsYear">
        <eAnnotations xmi:id="_1xO94JD1EeSMh_pkRTiRPQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_2F9QsJD1EeSMh_pkRTiRPQ" key="body" value="credit_CIS_yearly+credit_CIP_yearly"/>
        </eAnnotations>
        <ownedParameter xmi:id="_xL9b4JD1EeSMh_pkRTiRPQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Income_Tax_Credit" name="Income_Tax_Credit">
      <ownedAttribute xmi:id="Income_Tax_Credit-grantedBy" name="grantedBy" visibility="public" type="Grantor" isOrdered="true"/>
      <ownedAttribute xmi:id="Income_Tax_Credit-taxPayer" name="taxPayer" type="Tax_Payer" isOrdered="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Income_Tax_Credit-taxPayer-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Tax_Credit-tax_year" name="tax_year" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Tax_Credit-yearly" name="yearly" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Income_Tax_Credit-yearly-_defaultValue" value="300.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Tax_Credit-monthly" name="monthly" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Income_Tax_Credit-monthly-_defaultValue" value="25.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Tax_Credit-daily" name="daily" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="Income_Tax_Credit-daily-_defaultValue" value="1.0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Tax_Credit-taxation_Frame" name="taxation_Frame" type="Tax_Card" isOrdered="true" association="_packagedElement.43">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Income_Tax_Credit-taxation_Frame-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_C1HFgEzsEeaVApgXPK28xA" name="id7" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.43" memberEnd="Income_Tax_Credit-taxation_Frame Tax_Card-income_Tax_Credit"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.48" memberEnd="Tax_Card-current_tax_card Tax_Card-previous"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.49" memberEnd="Income-tax_card Tax_Card-income"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.50" memberEnd="Income-expenses Expense-income"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_bpLVMJQ9EeSMZqrJQmR94g" memberEnd="_bpLVMZQ9EeSMZqrJQmR94g _bpKHEJQ9EeSMZqrJQmR94g"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.51" memberEnd="Tax_Payer-incomes Income-taxPayer"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Income_Detail" name="Income_Detail">
      <ownedAttribute xmi:id="Income_Detail-month" name="month" visibility="public" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Detail-amount" name="amount" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Detail-is_worked" name="is_worked" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Detail-distance" name="distance" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Detail-worked_days" name="worked_days" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Income_Detail-income" name="income" type="Income" isOrdered="true" association="_packagedElement.53"/>
      <ownedAttribute xmi:id="_nhySMI9sEeSET8mBcpxzqQ" name="is_contributing_CNS">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rG-3QI9sEeSET8mBcpxzqQ" name="is_contributing_pension">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_5ctywEzrEeaVApgXPK28xA" name="id5" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.53" memberEnd="Income-details Income_Detail-income"/>
    <packagedElement xmi:type="uml:Class" xmi:id="FromLaw" name="FromLaw">
      <ownedAttribute xmi:id="FromLaw-taxPayer" name="taxPayer" type="Tax_Payer" isOrdered="true" association="_packagedElement.56"/>
      <ownedAttribute xmi:id="_t3FzcEzrEeaVApgXPK28xA" name="id" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedOperation xmi:id="FromLaw-CE_INVALIDITY_FLAT_RATE_TYPE_E" name="CE_INVALIDITY_FLAT_RATE_TYPE_E" visibility="public">
        <eAnnotations xmi:id="FromLaw-CE_INVALIDITY_FLAT_RATE_TYPE_E-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-CE_INVALIDITY_FLAT_RATE_TYPE_E-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="1455"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-CE_INVALIDITY_FLAT_RATE_TYPE_E-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-CIP_MINIMUM_INCOME_MONTH" name="CIP_MINIMUM_INCOME_MONTH" visibility="public">
        <eAnnotations xmi:id="FromLaw-CIP_MINIMUM_INCOME_MONTH-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-CIP_MINIMUM_INCOME_MONTH-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="25"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-CIP_MINIMUM_INCOME_MONTH-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-CIP_MINIMUM_INCOME_YEAR" name="CIP_MINIMUM_INCOME_YEAR" visibility="public">
        <eAnnotations xmi:id="FromLaw-CIP_MINIMUM_INCOME_YEAR-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-CIP_MINIMUM_INCOME_YEAR-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="300"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-CIP_MINIMUM_INCOME_YEAR-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-FLAT_RATE_CIP_YEARLY" name="FLAT_RATE_CIP_YEARLY" visibility="public">
        <eAnnotations xmi:id="FromLaw-FLAT_RATE_CIP_YEARLY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-FLAT_RATE_CIP_YEARLY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="300"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-FLAT_RATE_CIP_YEARLY-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-FLAT_RATE_PER_UNIT" name="FLAT_RATE_PER_UNIT" visibility="public">
        <eAnnotations xmi:id="FromLaw-FLAT_RATE_PER_UNIT-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-FLAT_RATE_PER_UNIT-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="99"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-FLAT_RATE_PER_UNIT-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-MAXIMUM_DISTANCE_IN_UNITS" name="MAXIMUM_DISTANCE_IN_UNITS" visibility="public">
        <eAnnotations xmi:id="FromLaw-MAXIMUM_DISTANCE_IN_UNITS-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-MAXIMUM_DISTANCE_IN_UNITS-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="30"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-MAXIMUM_DISTANCE_IN_UNITS-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-MINIMUM_DISTANCE_IN_UNITS" name="MINIMUM_DISTANCE_IN_UNITS" visibility="public">
        <eAnnotations xmi:id="FromLaw-MINIMUM_DISTANCE_IN_UNITS-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-MINIMUM_DISTANCE_IN_UNITS-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="4"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-MINIMUM_DISTANCE_IN_UNITS-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-FLAT_MAXIMUM_FD" name="FLAT_MAXIMUM_FD" visibility="public">
        <eAnnotations xmi:id="FromLaw-FLAT_MAXIMUM_FD-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-FLAT_MAXIMUM_FD-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="2574"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-FLAT_MAXIMUM_FD-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-CIS_MINIMUM_INCOME_DAY" name="CIS_MINIMUM_INCOME_DAY" visibility="public">
        <eAnnotations xmi:id="FromLaw-CIS_MINIMUM_INCOME_DAY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-CIS_MINIMUM_INCOME_DAY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="3.12"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-CIS_MINIMUM_INCOME_DAY-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-CIS_MINIMUM_INCOME_MONTH" name="CIS_MINIMUM_INCOME_MONTH" visibility="public">
        <eAnnotations xmi:id="FromLaw-CIS_MINIMUM_INCOME_MONTH-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-CIS_MINIMUM_INCOME_MONTH-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="78"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-CIS_MINIMUM_INCOME_MONTH-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-CIS_MINIMUM_INCOME_YEAR" name="CIS_MINIMUM_INCOME_YEAR" visibility="public">
        <eAnnotations xmi:id="FromLaw-CIS_MINIMUM_INCOME_YEAR-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-CIS_MINIMUM_INCOME_YEAR-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="936"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-CIS_MINIMUM_INCOME_YEAR-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-FLAT_RATE_CIS_DAILY" name="FLAT_RATE_CIS_DAILY" visibility="public">
        <eAnnotations xmi:id="FromLaw-FLAT_RATE_CIS_DAILY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-FLAT_RATE_CIS_DAILY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="1"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-FLAT_RATE_CIS_DAILY-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-FLAT_RATE_CIS_MONTHLY" name="FLAT_RATE_CIS_MONTHLY" visibility="public">
        <eAnnotations xmi:id="FromLaw-FLAT_RATE_CIS_MONTHLY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-FLAT_RATE_CIS_MONTHLY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="25"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-FLAT_RATE_CIS_MONTHLY-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FromLaw-FLAT_RATE_CIS_YEARLY" name="FLAT_RATE_CIS_YEARLY" visibility="public">
        <eAnnotations xmi:id="FromLaw-FLAT_RATE_CIS_YEARLY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="FromLaw-FLAT_RATE_CIS_YEARLY-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="body" value="300"/>
        </eAnnotations>
        <ownedParameter xmi:id="FromLaw-FLAT_RATE_CIS_YEARLY-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Agn5YH-KEeSHGtUXiBtlKg" name="get_A_for_salary_class_1">
        <eAnnotations xmi:id="_5W3zAH-KEeSHGtUXiBtlKg" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_7nfx0H-KEeSHGtUXiBtlKg" key="body" value="if(revenu&lt;= 1020) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 1180) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 1340) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 1500) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 1655) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 1815) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 1975) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 2135) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 2295) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 2450) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 2610) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 2770) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 2930) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 3090) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 3245) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 3405) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 3565) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 8415) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;      &#x9;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_O-ZKgH-KEeSHGtUXiBtlKg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_V7zokH-KEeSHGtUXiBtlKg" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ZGhmMH-MEeSvcM-kBpd7hg" name="get_B_for_salary_class_1">
        <eAnnotations xmi:id="_8Zk_8H-TEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_9IKkQH-TEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1020) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 1180) then 81.9&#xA;&#x9;&#x9;else if(revenu &lt;= 1340) then 105.555&#xA;&#x9;&#x9;else if(revenu &lt;= 1500) then 132.39000&#xA;&#x9;&#x9;else if(revenu &lt;= 1655) then 162.405&#xA;&#x9;&#x9;else if(revenu &lt;= 1815) then 195.6&#xA;&#x9;&#x9;else if(revenu &lt;= 1975) then 231.975&#xA;&#x9;&#x9;else if(revenu &lt;= 2135) then 271.53&#xA;&#x9;&#x9;else if(revenu &lt;= 2295) then 314.265&#xA;&#x9;&#x9;else if(revenu &lt;= 2450) then 360.18&#xA;&#x9;&#x9;else if(revenu &lt;= 2610) then 409.275&#xA;&#x9;&#x9;else if(revenu &lt;= 2770) then 461.55&#xA;&#x9;&#x9;else if(revenu &lt;= 2930) then 517.005&#xA;&#x9;&#x9;else if(revenu &lt;= 3090) then 575.64&#xA;&#x9;&#x9;else if(revenu &lt;= 3245) then 637.455&#xA;&#x9;&#x9;else if(revenu &lt;= 3405) then 702.45&#xA;&#x9;&#x9;else if(revenu &lt;= 3565) then 770.625&#xA;&#x9;&#x9;else if(revenu &lt;= 8415) then 806.30250 &#xA;&#x9;&#x9;else 890.48583&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_eRz_UH-MEeSvcM-kBpd7hg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_V_TjQIBgEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vT3LEH-MEeSvcM-kBpd7hg" name="get_A_for_salary_class_1A">
        <eAnnotations xmi:id="_Dtq4oH-UEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_GTAjMH-UEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1960) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 2065) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 2170) then 0.15&#xA;&#x9;&#x9;else if(revenu &lt;= 2280) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 2385) then 0.21&#xA;&#x9;&#x9;else if(revenu &lt;= 2490) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 2595) then 0.27&#xA;&#x9;&#x9;else if(revenu &lt;= 2700) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 2810) then 0.33&#xA;&#x9;&#x9;else if(revenu &lt;= 2915) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 3020) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_xmriQH-MEeSvcM-kBpd7hg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_zZY2AH-MEeSvcM-kBpd7hg" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_AxdqYH-NEeSvcM-kBpd7hg" name="get_B_for_salary_class_1A">
        <eAnnotations xmi:id="_KVbPwH-UEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_LsqvgH-UEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1960) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 2065) then 235.5&#xA;&#x9;&#x9;else if(revenu &lt;= 2170) then 297.555&#xA;&#x9;&#x9;else if(revenu &lt;= 2280) then 362.79&#xA;&#x9;&#x9;else if(revenu &lt;= 2385) then 431.205&#xA;&#x9;&#x9;else if(revenu &lt;= 2490) then 502.8&#xA;&#x9;&#x9;else if(revenu &lt;= 2595) then 577.575&#xA;&#x9;&#x9;else if(revenu &lt;= 2700) then 655.53&#xA;&#x9;&#x9;else if(revenu &lt;= 2810) then 736.665&#xA;&#x9;&#x9;else if(revenu &lt;= 2915) then 820.98&#xA;&#x9;&#x9;else if(revenu &lt;= 3020) then 908.475&#xA;&#x9;&#x9;else 938.7&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        &#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_lh4eMH-NEeSCSdACpDfnSA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oBhJYH-NEeSCSdACpDfnSA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tm-9EH-NEeSCSdACpDfnSA" name="get_A_for_salary_class_2">
        <eAnnotations xmi:id="_V8W2oH-UEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_XHtPcH-UEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1960) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 2280) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 2595) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 2915) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 3230) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 3550) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 3870) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 4185) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 4505) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 4820) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 5140) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 5460) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 5775) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 6095) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 6410) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 6730) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 7050) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 16750) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;                endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_xu1jQH-NEeSCSdACpDfnSA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_6t_2oH-NEeSCSdACpDfnSA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_-VPDEH-NEeSCSdACpDfnSA" name="get_B_for_salary_class_2">
        <eAnnotations xmi:id="_jitXkH-UEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_kjv90H-UEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1960) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 2280) then 157&#xA;&#x9;&#x9;else if(revenu &lt;= 2595) then 202.61&#xA;&#x9;&#x9;else if(revenu &lt;= 2915) then 254.58&#xA;&#x9;&#x9;else if(revenu &lt;= 3230) then 312.91&#xA;&#x9;&#x9;else if(revenu &lt;= 3550) then 377.6&#xA;&#x9;&#x9;else if(revenu &lt;= 3870) then 448.65&#xA;&#x9;&#x9;else if(revenu &lt;= 4185) then 526.06&#xA;&#x9;&#x9;else if(revenu &lt;= 4505) then 609.83&#xA;&#x9;&#x9;else if(revenu &lt;= 4820) then 699.96&#xA;&#x9;&#x9;else if(revenu &lt;= 5140) then 796.45&#xA;&#x9;&#x9;else if(revenu &lt;= 5460) then 899.3&#xA;&#x9;&#x9;else if(revenu &lt;= 5775) then 1008.51&#xA;&#x9;&#x9;else if(revenu &lt;= 6095) then 1124.08&#xA;&#x9;&#x9;else if(revenu &lt;= 6410) then 1246.01&#xA;&#x9;&#x9;else if(revenu &lt;= 6730) then 1374.3&#xA;&#x9;&#x9;else if(revenu &lt;= 7050) then 1508.95&#xA;&#x9;&#x9;else if(revenu &lt;= 16750) then  1579.455&#xA;&#x9;&#x9;else 1746.97166&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_Es694H-OEeSCSdACpDfnSA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_GYRFYH-OEeSCSdACpDfnSA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ILL0gH-OEeSCSdACpDfnSA" name="get_A_for_pension_class_1">
        <eAnnotations xmi:id="_obMwgH-UEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_p3wOEH-UEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1000) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 1160) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 1320) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 1480) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 1635) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 1795) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 1955) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 2115) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 2275) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 2430) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 2590) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 2750) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 2910) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 3070) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 3225) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 3385) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 3545) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 8395) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_NjpG8H-OEeSCSdACpDfnSA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_O_ey0H-OEeSCSdACpDfnSA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ROtqgH-OEeSCSdACpDfnSA" name="get_B_for_pension_class_1">
        <eAnnotations xmi:id="_tuyKAH-UEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_u1q5kH-UEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1000) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 1160) then 80.3&#xA;&#x9;&#x9;else if(revenu &lt;= 1320) then 103.555&#xA;&#x9;&#x9;else if(revenu &lt;= 1480) then 129.99&#xA;&#x9;&#x9;else if(revenu &lt;= 1635) then 159.605&#xA;&#x9;&#x9;else if(revenu &lt;= 1795) then 192.4&#xA;&#x9;&#x9;else if(revenu &lt;= 1955) then 228.375&#xA;&#x9;&#x9;else if(revenu &lt;= 2115) then 267.53&#xA;&#x9;&#x9;else if(revenu &lt;= 2275) then 309.865&#xA;&#x9;&#x9;else if(revenu &lt;= 2430) then 355.38&#xA;&#x9;&#x9;else if(revenu &lt;= 2590) then 404.075&#xA;&#x9;&#x9;else if(revenu &lt;= 2750) then 455.95&#xA;&#x9;&#x9;else if(revenu &lt;= 2910) then 511.005&#xA;&#x9;&#x9;else if(revenu &lt;= 3070) then 569.24&#xA;&#x9;&#x9;else if(revenu &lt;= 3225) then 630.655&#xA;&#x9;&#x9;else if(revenu &lt;= 3385) then 695.25&#xA;&#x9;&#x9;else if(revenu &lt;= 3545) then 763.025&#xA;&#x9;&#x9;else if(revenu &lt;= 8395) then 798.5025&#xA;&#x9;&#x9;else 882.48583&#x9;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_UgjOsH-OEeSCSdACpDfnSA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_aPaO8H-OEeSCSdACpDfnSA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_c6R5wH-OEeSCSdACpDfnSA" name="get_A_for_pension_class_1A">
        <eAnnotations xmi:id="_6dkJwH-UEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_8OetwH-UEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1940) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 2045) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 2150) then 0.15&#xA;&#x9;&#x9;else if(revenu &lt;= 2260) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 2365) then 0.21&#xA;&#x9;&#x9;else if(revenu &lt;= 2470) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 2575) then 0.27&#xA;&#x9;&#x9;else if(revenu &lt;= 2680) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 2790) then 0.33&#xA;&#x9;&#x9;else if(revenu &lt;= 2895) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 3000) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_f-B-oH-OEeSCSdACpDfnSA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_hdgNUH-OEeSCSdACpDfnSA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jsOusH-OEeSCSdACpDfnSA" name="get_B_for_pension_class_1A">
        <eAnnotations xmi:id="_AXUycH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_BnkSUH-VEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1940) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 2045) then 233.100&#xA;&#x9;&#x9;else if(revenu &lt;= 2150) then 294.555&#xA;&#x9;&#x9;else if(revenu &lt;= 2260) then 359.190&#xA;&#x9;&#x9;else if(revenu &lt;= 2365) then 427.005&#xA;&#x9;&#x9;else if(revenu &lt;= 2470) then 498&#xA;&#x9;&#x9;else if(revenu &lt;= 2575) then 572.175&#xA;&#x9;&#x9;else if(revenu &lt;= 2680) then 649.53&#xA;&#x9;&#x9;else if(revenu &lt;= 2790) then 730.065&#xA;&#x9;&#x9;else if(revenu &lt;= 2895) then 813.780&#xA;&#x9;&#x9;else if(revenu &lt;= 3000) then 900.675&#xA;&#x9;&#x9;else 930.700&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_mYT6cH-OEeSCSdACpDfnSA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_num_AH-OEeSCSdACpDfnSA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_NsMwkH-PEeSJlstZl0yjnQ" name="get_A_for_pension_class_2">
        <eAnnotations xmi:id="_DlLOgH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_ZnOwcH-VEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1940) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 2260) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 2575) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 2895) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 3210) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 3530) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 3850) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 4165) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 4485) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 4800) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 5120) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 5440) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 5755) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 6075) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 6390) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 6710) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 7030) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 16730) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_RRI28H-PEeSJlstZl0yjnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Sp714H-PEeSJlstZl0yjnQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_U4mF0H-PEeSJlstZl0yjnQ" name="get_B_for_pension_class_2">
        <eAnnotations xmi:id="_E7tjoH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_Y7XI8H-VEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 1940) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 2260) then 155.4&#xA;&#x9;&#x9;else if(revenu &lt;= 2575) then 200.61&#xA;&#x9;&#x9;else if(revenu &lt;= 2895) then 252.18&#xA;&#x9;&#x9;else if(revenu &lt;= 3210) then 310.11&#xA;&#x9;&#x9;else if(revenu &lt;= 3530) then 374.4&#xA;&#x9;&#x9;else if(revenu &lt;= 3850) then 445.05&#xA;&#x9;&#x9;else if(revenu &lt;= 4165) then 522.06&#xA;&#x9;&#x9;else if(revenu &lt;= 4485) then 605.43&#xA;&#x9;&#x9;else if(revenu &lt;= 4800) then 695.16&#xA;&#x9;&#x9;else if(revenu &lt;= 5120) then 791.25&#xA;&#x9;&#x9;else if(revenu &lt;= 5440) then 893.7&#xA;&#x9;&#x9;else if(revenu &lt;= 5755) then 1002.51&#xA;&#x9;&#x9;else if(revenu &lt;= 6075) then 1117.68&#xA;&#x9;&#x9;else if(revenu &lt;= 6390) then 1239.21&#xA;&#x9;&#x9;else if(revenu &lt;= 6710) then  1367.1&#xA;&#x9;&#x9;else if(revenu &lt;= 7030) then 1501.35&#xA;&#x9;&#x9;else if(revenu &lt;= 16730) then 1571.655&#xA;&#x9;&#x9;else 1738.97166&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_XRUQsH-PEeSJlstZl0yjnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_aly5MH-PEeSJlstZl0yjnQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mYK7EH-PEeSJlstZl0yjnQ" name="get_A_for_other_yearly_class_1">
        <eAnnotations xmi:id="_F8K7EH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_YRCZkH-VEeS7YrVIFIBXnQ" key="body" value=" if(revenu&lt;= 11250) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 13150) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 15050) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 16950) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 18850) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 20800) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 22700) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 24600) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 26500) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 28400) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 30300) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 32250) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 34150) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 36050) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 37950) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 39850) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 41750) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 100000) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_pF00IH-PEeSJlstZl0yjnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_zNKbEH-QEeSipvspW3BzGA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_62GiYH-QEeSipvspW3BzGA" name="get_B_for_other_yearly_class_1">
        <eAnnotations xmi:id="_G-WJwH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_Xqc6sH-VEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;= 11250) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 13150) then 901.200 &#xA;&#x9;&#x9;else if(revenu &lt;= 15050) then 1164.660&#xA;&#x9;&#x9;else if(revenu &lt;= 16950) then 1466.280&#xA;&#x9;&#x9;else if(revenu &lt;= 18850) then 1806.060&#xA;&#x9;&#x9;else if(revenu &lt;= 20800) then 2184&#xA;&#x9;&#x9;else if(revenu &lt;= 22700) then 2600.100&#xA;&#x9;&#x9;else if(revenu &lt;= 24600) then 3054.360&#xA;&#x9;&#x9;else if(revenu &lt;= 26500) then 3546.780 &#xA;&#x9;&#x9;else if(revenu &lt;= 28400) then 4077.360&#xA;&#x9;&#x9;else if(revenu &lt;= 30300) then 4646.100&#xA;&#x9;&#x9;else if(revenu &lt;= 32250) then 5253&#xA;&#x9;&#x9;else if(revenu &lt;= 34150) then 5898.060&#xA;&#x9;&#x9;else if(revenu &lt;= 36050) then 6581.28&#xA;&#x9;&#x9;else if(revenu &lt;= 37950) then 7302.66&#xA;&#x9;&#x9;else if(revenu &lt;= 39850) then 8062.2&#xA;&#x9;&#x9;else if(revenu &lt;= 41750) then 8859.9&#xA;&#x9;&#x9;else if(revenu &lt;= 100000) then 9277.83&#xA;&#x9;&#x9;else 10277.83&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_9UmlIH-QEeSipvspW3BzGA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="__BDf4H-QEeSipvspW3BzGA" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__11LwH-QEeSipvspW3BzGA" name="get_A_for_other_yearly_class_1A">
        <eAnnotations xmi:id="_H5BCQH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_XEo34H-VEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;=22500) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 23800) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 25050) then 0.15&#xA;&#x9;&#x9;else if(revenu &lt;= 26300) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 27600) then 0.21&#xA;&#x9;&#x9;else if(revenu &lt;= 28850) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 30150) then 0.27&#xA;&#x9;&#x9;else if(revenu &lt;= 31400) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 32700) then 0.33&#xA;&#x9;&#x9;else if(revenu &lt;= 33950) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 35250) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_FvcqgH-REeSipvspW3BzGA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_tpBAkH-REeS7YrVIFIBXnQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_JT3zgH-REeSipvspW3BzGA" name="get_B_for_other_yearly_class_1A">
        <eAnnotations xmi:id="_IzJIMH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_WgisUH-VEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;=22500) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 23800) then 2703.600&#xA;&#x9;&#x9;else if(revenu &lt;= 25050) then 3417.660&#xA;&#x9;&#x9;else if(revenu &lt;= 26300) then 4169.880&#xA;&#x9;&#x9;else if(revenu &lt;= 27600) then 4960.260&#xA;&#x9;&#x9;else if(revenu &lt;= 28850) then 5788.800&#xA;&#x9;&#x9;else if(revenu &lt;= 30150) then 6655.500&#xA;&#x9;&#x9;else if(revenu &lt;= 31400) then 7560.360&#xA;&#x9;&#x9;else if(revenu &lt;= 32700) then 8503.380&#xA;&#x9;&#x9;else if(revenu &lt;= 33950) then 9484.560&#xA;&#x9;&#x9;else if(revenu &lt;= 35250) then 10503.900&#xA;&#x9;&#x9;else  10856.400&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_vnOZsH-REeS7YrVIFIBXnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_7SiKQH-REeS7YrVIFIBXnQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OMP3sH-REeSipvspW3BzGA" name="get_A_for_other_yearly_class_2">
        <eAnnotations xmi:id="_J37mAH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_VvWf8H-VEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;=22500) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 26300) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 30150) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 33950) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 37750) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 41600) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 45400) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 49200) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 53050) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 56850) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 60650) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 64500) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 68300) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 72100) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 75950) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 79750) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 83550) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 200000) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_xh-2MH-REeS7YrVIFIBXnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_9G4cwH-REeS7YrVIFIBXnQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_SPPzEH-REeSipvspW3BzGA" name="get_B_for_other_yearly_class_2">
        <eAnnotations xmi:id="_KyXN8H-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_VAfO0H-VEeS7YrVIFIBXnQ" key="body" value="if(revenu&lt;=22500) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 26300) then 1802.400 &#xA;&#x9;&#x9;else if(revenu &lt;= 30150) then 2329.320&#xA;&#x9;&#x9;else if(revenu &lt;= 33950) then 2932.560&#xA;&#x9;&#x9;else if(revenu &lt;= 37750) then 3612.120&#xA;&#x9;&#x9;else if(revenu &lt;= 41600) then 4368.000&#xA;&#x9;&#x9;else if(revenu &lt;= 45400) then 5200.200&#xA;&#x9;&#x9;else if(revenu &lt;= 49200) then 6108.720&#xA;&#x9;&#x9;else if(revenu &lt;= 53050) then 7093.560&#xA;&#x9;&#x9;else if(revenu &lt;= 56850) then 8154.720&#xA;&#x9;&#x9;else if(revenu &lt;= 60650) then 9292.200&#xA;&#x9;&#x9;else if(revenu &lt;= 64500) then 10506.000&#xA;&#x9;&#x9;else if(revenu &lt;= 68300) then 11796.120&#xA;&#x9;&#x9;else if(revenu &lt;= 72100) then 13162.560&#xA;&#x9;&#x9;else if(revenu &lt;= 75950) then 14605.320&#xA;&#x9;&#x9;else if(revenu &lt;= 79750) then 16124.400&#xA;&#x9;&#x9;else if(revenu &lt;= 83550) then 17719.800&#xA;&#x9;&#x9;else if(revenu &lt;= 200000) then 18555.660&#xA;&#x9;&#x9;else 20555.660&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_zEvpcH-REeS7YrVIFIBXnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-ekocH-REeS7YrVIFIBXnQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Z4wiIH-REeSipvspW3BzGA" name="calculate_taxes_per_month">
        <eAnnotations xmi:id="_Ln3SkH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_Tq-NYH-VEeS7YrVIFIBXnQ" key="body" value="if(income_type='Employment') then&#xA;&#x9;&#x9;&#x9;let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_salary_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_salary_class_2(amount) else get_A_for_salary_class_1(amount) endif endif in&#xA;&#x9;&#x9;&#x9;let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_salary_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_salary_class_2(amount) else get_B_for_salary_class_1(amount) endif endif in&#xA;&#x9;&#x9;    let res:Real = round_ten_cent(a * amount - b) in&#xA;            let max:Real = if(classe=Tax_Class_Category::Two) then 25085 else 12585 endif in&#xA;            &#xA;&#x9;&#x9;    if(amount&lt;max) then&#xA;&#x9;&#x9;    let final_res:Real= round_ten_cent(res*1.07) in&#xA;&#x9;&#x9;    if(final_res&lt;1)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    else &#xA;&#x9;&#x9;    let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 81.906 else if(classe=Tax_Class_Category::Two) then 165.74 else 82.87 endif endif in&#xA;&#x9;&#x9; &#x9;let final_res:Real=  round_ten_cent(res + (res*0.09-adjustement)) in&#xA;&#x9;&#x9; &#x9;if(final_res&lt;1)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if(income_type='Pension') then&#xA;&#x9;&#x9;&#x9;let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_pension_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_pension_class_2(amount) else get_A_for_pension_class_1(amount) endif endif in&#xA;&#x9;&#x9;&#x9;let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_pension_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_pension_class_2(amount) else get_B_for_pension_class_1(amount) endif endif in&#xA;&#x9;&#x9;    let res:Real = round_ten_cent(a * amount - b) in&#xA;&#x9;&#x9;    let max:Real = if(classe=Tax_Class_Category::Two) then 25065 else 12565 endif in&#xA;            &#xA;&#x9;&#x9;    if(amount&lt;max) then&#xA;&#x9;&#x9;    let final_res:Real= round_ten_cent(res*1.07) in&#xA;&#x9;&#x9;    if(final_res&lt;1)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    else &#xA;&#x9;&#x9;    let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 81.906 else if(classe=Tax_Class_Category::Two) then 165.74 else 82.87 endif endif in&#xA;&#x9;&#x9; &#x9;let final_res:Real=  round_ten_cent(res + (res*0.09-adjustement)) in&#xA;&#x9;&#x9; &#x9;if(final_res&lt;1)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    endif&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;-1&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0rCR0H-REeS7YrVIFIBXnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_HnAzoH-SEeS7YrVIFIBXnQ" name="amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_M_PckH-SEeS7YrVIFIBXnQ" name="classe" type="Tax_Class_Category"/>
        <ownedParameter xmi:id="_Q9sPIH-SEeS7YrVIFIBXnQ" name="income_type">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_eU-OwH-REeSipvspW3BzGA" name="round_lower_euros">
        <eAnnotations xmi:id="_ORMFQH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_S6kEIH-VEeS7YrVIFIBXnQ" key="body" value="let p1:Integer = amount.floor() in&#xA;&#x9;&#x9;&#x9;p1.toString().toReal()"/>
        </eAnnotations>
        <ownedParameter xmi:id="_2746IH-REeS7YrVIFIBXnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_EU14QH-SEeS7YrVIFIBXnQ" name="amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_gyPicH-REeSipvspW3BzGA" name="round_ten_cent">
        <eAnnotations xmi:id="_P0mYwH-VEeS7YrVIFIBXnQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_RrwHoH-VEeS7YrVIFIBXnQ" key="body" value="let p1:Integer = amount.floor() in&#xA;&#x9;&#x9;&#x9;if(p1=amount) then&#xA;&#x9;&#x9;&#x9;amount&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let p2_temp:Real = (amount-p1) * 10 in&#xA;&#x9;&#x9;&#x9;let p2:Integer = p2_temp.floor() in&#xA;&#x9;&#x9;&#x9;p1.toString().toReal()+(p2.toString().toReal()/10.0)&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_449q0H-REeS7YrVIFIBXnQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_C2OlMH-SEeS7YrVIFIBXnQ" name="amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_UcdfMIBaEeSS--Tr1brRQQ" name="get_A_for_salary_yearly_class_1">
        <eAnnotations xmi:id="_72KM8IBbEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_KA83sIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 12250) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 14150) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 16100) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 18000) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 19900) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 21800) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 23700) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 25600) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 27500) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 29450) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 31350) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 33250) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 35150) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 37050) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 38950) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 40900) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 42800) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 101000) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_ECKagIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_dITYgIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_XDCf4IBaEeSS--Tr1brRQQ" name="get_B_for_salary_yearly_class_1">
        <eAnnotations xmi:id="_9Q1bMIBbEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_KubBsIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 12250) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 14150) then 982.8000&#xA;&#x9;&#x9;else if(revenu &lt;= 16100) then 1266.6600&#xA;&#x9;&#x9;else if(revenu &lt;= 18000) then 1588.6800&#xA;&#x9;&#x9;else if(revenu &lt;= 19900) then 1948.8600&#xA;&#x9;&#x9;else if(revenu &lt;= 21800) then 2347.2000&#xA;&#x9;&#x9;else if(revenu &lt;= 23700) then 2783.7000&#xA;&#x9;&#x9;else if(revenu &lt;= 25600) then 3258.3600&#xA;&#x9;&#x9;else if(revenu &lt;= 27500) then 3771.1800&#xA;&#x9;&#x9;else if(revenu &lt;= 29450) then 4322.1600&#xA;&#x9;&#x9;else if(revenu &lt;= 31350) then 4911.3000&#xA;&#x9;&#x9;else if(revenu &lt;= 33250) then 5538.6000&#xA;&#x9;&#x9;else if(revenu &lt;= 35150) then 6204.0600&#xA;&#x9;&#x9;else if(revenu &lt;= 37050) then 6907.6800&#xA;&#x9;&#x9;else if(revenu &lt;= 38950) then 7649.4600&#xA;&#x9;&#x9;else if(revenu &lt;= 40900) then 8429.4000&#xA;&#x9;&#x9;else if(revenu &lt;= 42800) then  9247.5000&#xA;&#x9;&#x9;else if(revenu &lt;= 101000) then  9675.6300&#xA;&#x9;&#x9;else 10685.8300&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_HEtlgIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ebBkoIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_e-hvwIBaEeSS--Tr1brRQQ" name="get_A_for_salary_yearly_class_1A">
        <eAnnotations xmi:id="_-LMKoIBbEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_LOnksIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 23500) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 24800) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 26050) then 0.15&#xA;&#x9;&#x9;else if(revenu &lt;= 27350) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 28600) then 0.21&#xA;&#x9;&#x9;else if(revenu &lt;= 29900) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 31150) then 0.27&#xA;&#x9;&#x9;else if(revenu &lt;= 32450) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 33700) then 0.33&#xA;&#x9;&#x9;else if(revenu &lt;= 34950) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 36250) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_I1HMIIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_fntaMIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_homwYIBaEeSS--Tr1brRQQ" name="get_B_for_salary_yearly_class_1A">
        <eAnnotations xmi:id="__N92QIBbEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_LxpZQIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 23500) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 24800) then 2826.0000&#xA;&#x9;&#x9;else if(revenu &lt;= 26050) then 3570.6600&#xA;&#x9;&#x9;else if(revenu &lt;= 27350) then 4353.4800&#xA;&#x9;&#x9;else if(revenu &lt;= 28600) then 5174.4600&#xA;&#x9;&#x9;else if(revenu &lt;= 29900) then 6033.6000&#xA;&#x9;&#x9;else if(revenu &lt;= 31150) then 6930.9000&#xA;&#x9;&#x9;else if(revenu &lt;= 32450) then 7866.3600&#xA;&#x9;&#x9;else if(revenu &lt;= 33700) then 8839.9800&#xA;&#x9;&#x9;else if(revenu &lt;= 34950) then 9851.7600&#xA;&#x9;&#x9;else if(revenu &lt;= 36250) then  10901.7000&#xA;&#x9;&#x9;else 11264.4000&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_KZskUIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_gxGEIIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j9EtYIBaEeSS--Tr1brRQQ" name="get_A_for_salary_yearly_class_2">
        <eAnnotations xmi:id="__83joIBbEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_MUrN0IBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 23550) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 27350) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 31150) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 34950) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 38800) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 42600) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 46400) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 50250) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 54050) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 57850) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 61700) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 65500) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 69300) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 73150) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 76950) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 80750) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 84600) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 201000) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_MFPgIIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_iAE_wIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mH8CcIBaEeSS--Tr1brRQQ" name="get_B_for_salary_yearly_class_2">
        <eAnnotations xmi:id="_A7GtgIBcEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_M3fnAIBcEeSS--Tr1brRQQ" key="body" value=" if(revenu&lt;= 23550) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 27350) then 1884.000&#xA;&#x9;&#x9;else if(revenu &lt;= 31150) then 2431.3200&#xA;&#x9;&#x9;else if(revenu &lt;= 34950) then 3054.9600&#xA;&#x9;&#x9;else if(revenu &lt;= 38800) then 3754.9200&#xA;&#x9;&#x9;else if(revenu &lt;= 42600) then 4531.2000&#xA;&#x9;&#x9;else if(revenu &lt;= 46400) then 5383.8000&#xA;&#x9;&#x9;else if(revenu &lt;= 50250) then 6312.7200&#xA;&#x9;&#x9;else if(revenu &lt;= 54050) then 7317.9600&#xA;&#x9;&#x9;else if(revenu &lt;= 57850) then 8399.5200&#xA;&#x9;&#x9;else if(revenu &lt;= 61700) then 9557.4000&#xA;&#x9;&#x9;else if(revenu &lt;= 65500) then 10791.6000&#xA;&#x9;&#x9;else if(revenu &lt;= 69300) then 12102.1200&#xA;&#x9;&#x9;else if(revenu &lt;= 73150) then 13488.9600&#xA;&#x9;&#x9;else if(revenu &lt;= 76950) then 14952.1200&#xA;&#x9;&#x9;else if(revenu &lt;= 80750) then 16491.6000&#xA;&#x9;&#x9;else if(revenu &lt;= 84600) then 18107.4000&#xA;&#x9;&#x9;else if(revenu &lt;= 201000) then 18953.4600&#xA;&#x9;&#x9;else 20963.6600&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_N7RNoIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_jWRWoIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pf6q4IBaEeSS--Tr1brRQQ" name="get_A_for_pension_yearly_class_1">
        <eAnnotations xmi:id="_BwSCAIBcEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_NY_xkIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 12000) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 13950) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 15850) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 17750) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 19650) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 21550) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 23450) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 25400) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 27300) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 29200) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 31100) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 33000) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 34900) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 36800) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 38750) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 40650) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 42550) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 100750) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_P45_AIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_kbhHcIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_rp3Z8IBaEeSS--Tr1brRQQ" name="get_B_for_pension_yearly_class_1">
        <eAnnotations xmi:id="_CekrYIBcEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_N2K1wIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 12000) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 13950) then 963.600&#xA;&#x9;&#x9;else if(revenu &lt;= 15850) then 1242.660&#xA;&#x9;&#x9;else if(revenu &lt;= 17750) then 1559.880&#xA;&#x9;&#x9;else if(revenu &lt;= 19650) then 1915.260&#xA;&#x9;&#x9;else if(revenu &lt;= 21550) then 2308.800&#xA;&#x9;&#x9;else if(revenu &lt;= 23450) then 2740.500&#xA;&#x9;&#x9;else if(revenu &lt;= 25400) then 3210.360&#xA;&#x9;&#x9;else if(revenu &lt;= 27300) then 3718.380&#xA;&#x9;&#x9;else if(revenu &lt;= 29200) then 4264.560&#xA;&#x9;&#x9;else if(revenu &lt;= 31100) then 4848.900&#xA;&#x9;&#x9;else if(revenu &lt;= 33000) then 5471.400&#xA;&#x9;&#x9;else if(revenu &lt;= 34900) then 6132.060&#xA;&#x9;&#x9;else if(revenu &lt;= 36800) then 6830.880&#xA;&#x9;&#x9;else if(revenu &lt;= 38750) then 7567.860&#xA;&#x9;&#x9;else if(revenu &lt;= 40650) then 8343.000&#xA;&#x9;&#x9;else if(revenu &lt;= 42550) then 9156.300&#xA;&#x9;&#x9;else if(revenu &lt;= 100750) then 9582.030&#xA;&#x9;&#x9;else 10589.830&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_RREEwIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_lyXloIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_xivR0IBaEeSS--Tr1brRQQ" name="get_A_for_pension_yearly_class_1A">
        <eAnnotations xmi:id="_EmpLIIBcEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_Oc9wAIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 23300) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 24550) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 25850) then 0.15&#xA;&#x9;&#x9;else if(revenu &lt;= 27100) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 28350) then 0.21&#xA;&#x9;&#x9;else if(revenu &lt;= 29650) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 30900) then 0.27&#xA;&#x9;&#x9;else if(revenu &lt;= 32200) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 33450) then 0.33&#xA;&#x9;&#x9;else if(revenu &lt;= 34750) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 36000) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_TsvdAIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_m1nLUIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0dqK0IBaEeSS--Tr1brRQQ" name="get_B_for_pension_yearly_class_1A">
        <eAnnotations xmi:id="_FXy7QIBcEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_O7W8MIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 23300) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 24550) then 2797.200&#xA;&#x9;&#x9;else if(revenu &lt;= 25850) then 3534.660&#xA;&#x9;&#x9;else if(revenu &lt;= 27100) then 4310.280&#xA;&#x9;&#x9;else if(revenu &lt;= 28350) then 5124.060&#xA;&#x9;&#x9;else if(revenu &lt;= 29650) then 5976.000&#xA;&#x9;&#x9;else if(revenu &lt;= 30900) then 6866.100&#xA;&#x9;&#x9;else if(revenu &lt;= 32200) then 7794.360&#xA;&#x9;&#x9;else if(revenu &lt;= 33450) then 8760.780&#xA;&#x9;&#x9;else if(revenu &lt;= 34750) then 9765.360&#xA;&#x9;&#x9;else if(revenu &lt;= 36000) then  10808.100&#xA;&#x9;&#x9;else 11168.400&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_VIzyYIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oHu6gIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_4krqkIBaEeSS--Tr1brRQQ" name="get_A_for_pension_yearly_class_2">
        <eAnnotations xmi:id="_GJIRkIBcEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_PfIXoIBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 23300) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 27100) then 0.08&#xA;&#x9;&#x9;else if(revenu &lt;= 30900) then 0.1&#xA;&#x9;&#x9;else if(revenu &lt;= 34750) then 0.12&#xA;&#x9;&#x9;else if(revenu &lt;= 38550) then 0.14&#xA;&#x9;&#x9;else if(revenu &lt;= 42350) then 0.16&#xA;&#x9;&#x9;else if(revenu &lt;= 46200) then 0.18&#xA;&#x9;&#x9;else if(revenu &lt;= 50000) then 0.2&#xA;&#x9;&#x9;else if(revenu &lt;= 53800) then 0.22&#xA;&#x9;&#x9;else if(revenu &lt;= 57650) then 0.24&#xA;&#x9;&#x9;else if(revenu &lt;= 61450) then 0.26&#xA;&#x9;&#x9;else if(revenu &lt;= 65250) then 0.28&#xA;&#x9;&#x9;else if(revenu &lt;= 69100) then 0.3&#xA;&#x9;&#x9;else if(revenu &lt;= 72900) then 0.32&#xA;&#x9;&#x9;else if(revenu &lt;= 76700) then 0.34&#xA;&#x9;&#x9;else if(revenu &lt;= 80550) then 0.36&#xA;&#x9;&#x9;else if(revenu &lt;= 84350) then 0.38&#xA;&#x9;&#x9;else if(revenu &lt;= 200750) then 0.39&#xA;&#x9;&#x9;else 0.4&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_WgtZcIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_pRYDIIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_5a7WEIBaEeSS--Tr1brRQQ" name="get_B_for_pension_yearly_class_2">
        <eAnnotations xmi:id="_G6PlcIBcEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_P7s-4IBcEeSS--Tr1brRQQ" key="body" value="if(revenu&lt;= 23300) then 0&#xA;&#x9;&#x9;else if(revenu &lt;= 27100) then 1864.800&#xA;&#x9;&#x9;else if(revenu &lt;= 30900) then 2407.320&#xA;&#x9;&#x9;else if(revenu &lt;= 34750) then 3026.160&#xA;&#x9;&#x9;else if(revenu &lt;= 38550) then 3721.320&#xA;&#x9;&#x9;else if(revenu &lt;= 42350) then 4492.800&#xA;&#x9;&#x9;else if(revenu &lt;= 46200) then 5340.600&#xA;&#x9;&#x9;else if(revenu &lt;= 50000) then 6264.720&#xA;&#x9;&#x9;else if(revenu &lt;= 53800) then 7265.160&#xA;&#x9;&#x9;else if(revenu &lt;= 57650) then 8341.920&#xA;&#x9;&#x9;else if(revenu &lt;= 61450) then 9495.000&#xA;&#x9;&#x9;else if(revenu &lt;= 65250) then 10724.400&#xA;&#x9;&#x9;else if(revenu &lt;= 69100) then 12030.120&#xA;&#x9;&#x9;else if(revenu &lt;= 72900) then 13412.160&#xA;&#x9;&#x9;else if(revenu &lt;= 76700) then 14870.520&#xA;&#x9;&#x9;else if(revenu &lt;= 80550) then 16405.200&#xA;&#x9;&#x9;else if(revenu &lt;= 84350) then 18016.200&#xA;&#x9;&#x9;else if(revenu &lt;= 200750) then 18859.860&#xA;&#x9;&#x9;else 20867.660&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;endif&#xA;        endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_XvObAIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_qf2BYIBbEeSS--Tr1brRQQ" name="revenu">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_8O9j8IBaEeSS--Tr1brRQQ" name="calculate_taxes_per_year">
        <eAnnotations xmi:id="_HtMFUIBcEeSS--Tr1brRQQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_QfclIIBcEeSS--Tr1brRQQ" key="body" value="if(income_type='Employment') then&#xA;&#x9;&#x9;&#x9;let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_salary_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_salary_yearly_class_2(amount) else get_A_for_salary_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;&#x9;let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_salary_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_salary_yearly_class_2(amount) else get_B_for_salary_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;    let res:Real = round_lower_euros(a * amount - b) in&#xA;            let max:Real = if(classe=Tax_Class_Category::Two) then 301020 else 151020 endif in&#xA;            &#xA;&#x9;&#x9;    if(amount&lt;max) then&#xA;&#x9;&#x9;    let final_res:Real= round_lower_euros(res*1.07) in&#xA;&#x9;&#x9;    if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    else &#xA;&#x9;&#x9;    let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in&#xA;&#x9;&#x9; &#x9;let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in&#xA;&#x9;&#x9; &#x9;if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if(income_type='Pension') then&#xA;&#x9;&#x9;&#x9;let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_pension_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_pension_yearly_class_2(amount) else get_A_for_pension_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;&#x9;let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_pension_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_pension_yearly_class_2(amount) else get_B_for_pension_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;    let res:Real = round_lower_euros(a * amount - b) in&#xA;&#x9;&#x9;    let max:Real = if(classe=Tax_Class_Category::Two) then 300780 else 150780 endif in&#xA;            &#xA;&#x9;&#x9;    if(amount&lt;max) then&#xA;&#x9;&#x9;    let final_res:Real= round_lower_euros(res*1.07) in&#xA;&#x9;&#x9;    if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    else &#xA;&#x9;&#x9;    let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in&#xA;&#x9;&#x9; &#x9;let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in&#xA;&#x9;&#x9; &#x9;if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_other_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_other_yearly_class_2(amount) else get_A_for_other_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;&#x9;let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_other_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_other_yearly_class_2(amount) else get_B_for_other_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;    let res:Real = round_lower_euros(a * amount - b) in&#xA;            let max:Real = if(classe=Tax_Class_Category::Two) then 300000 else 150000 endif in&#xA;            &#xA;&#x9;&#x9;    if(amount&lt;max) then&#xA;&#x9;&#x9;    let final_res:Real= round_lower_euros(res*1.07) in&#xA;&#x9;&#x9;    if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    else &#xA;&#x9;&#x9;    let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in&#xA;&#x9;&#x9; &#x9;let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in&#xA;&#x9;&#x9; &#x9;if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif &#xA;&#x9;&#x9;    endif  &#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_ZbV-kIBbEeSS--Tr1brRQQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_tKVRsIBbEeSS--Tr1brRQQ" name="amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_vfjcoIBbEeSS--Tr1brRQQ" name="classe" type="Tax_Class_Category"/>
        <ownedParameter xmi:id="_yvPEsIBbEeSS--Tr1brRQQ" name="income_type">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_xtIuIIxGEeSQ-eW2JAQJHg" name="CNS_RATE">
        <eAnnotations xmi:id="_7nLVYIxGEeSQ-eW2JAQJHg" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_8_cI0IxGEeSQ-eW2JAQJHg" key="body" value="0.0305"/>
        </eAnnotations>
        <ownedParameter xmi:id="_2-vxsIxGEeSQ-eW2JAQJHg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_BOY4sIxLEeSQ-eW2JAQJHg" name="PENSION_RATE">
        <eAnnotations xmi:id="_ZcqakIxLEeSQ-eW2JAQJHg" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_bJB1wIxLEeSQ-eW2JAQJHg" key="body" value="0.08"/>
        </eAnnotations>
        <ownedParameter xmi:id="_GshVUIxLEeSQ-eW2JAQJHg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FZxsUIxREeSQ-eW2JAQJHg" name="round_lower_fifty_euros">
        <eAnnotations xmi:id="_OXIo4IxREeSQ-eW2JAQJHg" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_QFwG0IxREeSQ-eW2JAQJHg" key="body" value="&#x9;&#x9;if(amount&lt;50) then&#xA;&#x9;&#x9;&#x9;0&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if (amount>=50 and amount&lt;100) then&#xA;&#x9;&#x9;&#x9;50.0&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let temp_amount:Real = round_lower_euros(amount) in&#xA;&#x9;&#x9;&#x9;let ch:String=temp_amount.toString()in&#xA;&#x9;&#x9;&#x9;let temp_amount1:Real = temp_amount / 100.0 in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(temp_amount1.round() = temp_amount1.floor()) then&#xA;&#x9;&#x9;&#x9;temp_amount1.floor() * 100.0&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;(temp_amount1.round()  * 100.0) - 50&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_JfjO4IxREeSQ-eW2JAQJHg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_K-G3kIxREeSQ-eW2JAQJHg" name="amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_bvBQAIxREeSQ-eW2JAQJHg" name="getTaxableIncomePerYear">
        <eAnnotations xmi:id="_lFWtQIxREeSQ-eW2JAQJHg" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_maFEgIxREeSQ-eW2JAQJHg" key="body" value="let gross_salary_year:Real= income.income_per_year() in&#xA;&#x9;&#x9;&#x9;let type:Income_Type=income.income_type in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(type.oclIsTypeOf(Employment_Income)) then&#xA;&#x9;&#x9;&#x9;let sum_deductions_year:Real=income.tax_card.getSumDeductionsYear() in&#xA;&#x9;&#x9;&#x9;let part_pension_year:Real= gross_salary_year * income.taxPayer.from_law.PENSION_RATE() in&#xA;&#x9;&#x9;&#x9;let part_CNS_year:Real= gross_salary_year * income.taxPayer.from_law.CNS_RATE() in&#xA;&#x9;&#x9;&#x9;let taxable_income:Real= gross_salary_year- (part_CNS_year + part_pension_year + sum_deductions_year) in  &#x9;&#xA;&#x9;&#x9;&#x9;round_lower_fifty_euros(taxable_income)&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if(type.oclIsTypeOf(Pensions_and_Annuities_Income))then&#xA;&#x9;&#x9;&#x9;let sum_deductions_year:Real=income.tax_card.getSumDeductionsYear() in&#xA;&#x9;&#x9;&#x9;let taxable_income:Real= gross_salary_year- sum_deductions_year in  &#x9;&#xA;&#x9;&#x9;&#x9;round_lower_fifty_euros(taxable_income)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let details:Set(Income_Detail)= income.details->select(i:Income_Detail|i.is_worked=true) in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;let res:Real= details->iterate( elem : Income_Detail;  acc : Real = 0 | &#xA;&#x9;&#x9;&#x9; &#x9;&#xA;&#x9;&#x9;&#x9; &#x9;if(elem.is_contributing_CNS=false and elem.is_contributing_pension=false) then acc + elem.amount &#xA;&#x9;&#x9;&#x9; &#x9;else&#xA;&#x9;&#x9;&#x9; &#x9;if(elem.is_contributing_CNS=true and elem.is_contributing_pension=true) then&#xA;&#x9;&#x9;&#x9; &#x9;acc+  elem.amount - (elem.amount* income.taxPayer.from_law.PENSION_RATE()) - (elem.amount* income.taxPayer.from_law.CNS_RATE())&#xA;&#x9;&#x9;&#x9; &#x9;else&#xA;&#x9;&#x9;&#x9; &#x9;if(elem.is_contributing_CNS=true)then&#xA;&#x9;&#x9;&#x9;    acc+  elem.amount  - (elem.amount* income.taxPayer.from_law.CNS_RATE())&#xA;&#x9;&#x9;&#x9; &#x9;else&#xA;&#x9;&#x9;&#x9; &#x9;acc+  elem.amount  - (elem.amount* income.taxPayer.from_law.PENSION_RATE()) &#xA;&#x9;&#x9;&#x9; &#x9;&#xA;&#x9;&#x9;&#x9; &#x9;endif &#xA;&#x9;&#x9;&#x9; &#x9;endif &#xA;&#x9;&#x9;&#x9; &#x9;endif &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;in round_lower_fifty_euros(res)&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_gfXZkIxREeSQ-eW2JAQJHg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_imYwcIxREeSQ-eW2JAQJHg" name="income" type="Income"/>
      </ownedOperation>
      <ownedOperation xmi:id="_FueFYJDwEeSMh_pkRTiRPQ" name="precision">
        <eAnnotations xmi:id="_Tit4YJDwEeSMh_pkRTiRPQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_T_15QJDwEeSMh_pkRTiRPQ" key="body" value="&#x9;&#x9;let ch:String=amount.toString() in&#xA;&#x9;&#x9;&#x9;if(ch.indexOf('.')=-1)then&#xA;&#x9;&#x9;&#x9;amount&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let pos_pt:Integer=ch.indexOf('.') in&#xA;&#x9;&#x9;&#x9;if(pos_pt+degit >=ch.size()) then&#xA;&#x9;&#x9;&#x9;amount &#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;let ch1:String=ch.substring(1,pos_pt+degit) in&#xA;&#x9;&#x9;&#x9;ch1.toReal()&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_LCb5YJDwEeSMh_pkRTiRPQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Nl4GgJDwEeSMh_pkRTiRPQ" name="amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_Pm_CoJDwEeSMh_pkRTiRPQ" name="degit">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="__vgBEJKmEeSsDc98mGjcqQ" name="MAXIMUM_RATE_FOR_CE_CHILDREN">
        <eAnnotations xmi:id="_HbPkwJKnEeSsDc98mGjcqQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_H0wQ8JKnEeSsDc98mGjcqQ" key="body" value="3480"/>
        </eAnnotations>
        <ownedParameter xmi:id="_EuJFUJKnEeSsDc98mGjcqQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_UekbsJKoEeSsDc98mGjcqQ" name="MINIMUM_LEGAL_SALARY">
        <eAnnotations xmi:id="_c8XHYJKoEeSsDc98mGjcqQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_dXXBUJKoEeSsDc98mGjcqQ" key="body" value="1921.03"/>
        </eAnnotations>
        <ownedParameter xmi:id="_X38LQJKoEeSsDc98mGjcqQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_OS3bQJNUEeSZisr9dyMXhQ" name="MAXIMUM_FLAT_RATE_FOR_ALIMONY">
        <eAnnotations xmi:id="_hYyjQJNUEeSZisr9dyMXhQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_hx8DEJNUEeSZisr9dyMXhQ" key="body" value="&#x9;&#x9;&#x9;if(year_divorce>1997)then&#xA;&#x9;&#x9;&#x9;if(year &lt;=2007) then&#xA;&#x9;&#x9;&#x9;20400&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if(year=2008) then&#xA;&#x9;&#x9;&#x9;21600&#xA;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;if(year=2009 or year = 2010) then&#xA;&#x9;&#x9;&#x9;23400&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;24000&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#xA;&#x9;&#x9;&#x9;if(year &lt;=2007) then&#xA;&#x9;&#x9;&#x9;20400&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if(year=2008) then&#xA;&#x9;&#x9;&#x9;21600&#xA;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;23400&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_TRkw8JNUEeSZisr9dyMXhQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_YzjLwJNUEeSZisr9dyMXhQ" name="year">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_cQksQJNUEeSZisr9dyMXhQ" name="year_divorce">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Qj9jYDqFEeWZIdvCK8ArXg" name="AEP_FLAT_RATE">
        <eAnnotations xmi:id="_aHCcIDqFEeWZIdvCK8ArXg" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_bvnjgDqFEeWZIdvCK8ArXg" key="body" value="4500"/>
        </eAnnotations>
        <ownedParameter xmi:id="_UPDVEDqFEeWZIdvCK8ArXg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_8lPOUG3NEeWcOt8eh6sd-w" name="calculate_taxes_per_year_mixed">
        <eAnnotations xmi:id="_V3LMoG3OEeWcOt8eh6sd-w" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="_WTZOkG3OEeWcOt8eh6sd-w" key="body" value="if(income_type='Employment') then&#xA;&#x9;&#x9;&#x9;let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_salary_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_salary_yearly_class_2(amount) else get_A_for_salary_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;&#x9;let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_salary_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_salary_yearly_class_2(amount) else get_B_for_salary_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;    let res:Real = round_lower_euros(a * local_amount - b) in&#xA;            let max:Real = if(classe=Tax_Class_Category::Two) then 301020 else 151020 endif in&#xA;            &#xA;&#x9;&#x9;    if(amount&lt;max) then&#xA;&#x9;&#x9;    let final_res:Real= round_lower_euros(res*1.07) in&#xA;&#x9;&#x9;    if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    else &#xA;&#x9;&#x9;    let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in&#xA;&#x9;&#x9; &#x9;let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in&#xA;&#x9;&#x9; &#x9;if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if(income_type='Pension') then&#xA;&#x9;&#x9;&#x9;let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_pension_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_pension_yearly_class_2(amount) else get_A_for_pension_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;&#x9;let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_pension_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_pension_yearly_class_2(amount) else get_B_for_pension_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;    let res:Real = round_lower_euros(a * local_amount - b) in&#xA;&#x9;&#x9;    let max:Real = if(classe=Tax_Class_Category::Two) then 300780 else 150780 endif in&#xA;            &#xA;&#x9;&#x9;    if(amount&lt;max) then&#xA;&#x9;&#x9;    let final_res:Real= round_lower_euros(res*1.07) in&#xA;&#x9;&#x9;    if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    else &#xA;&#x9;&#x9;    let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in&#xA;&#x9;&#x9; &#x9;let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in&#xA;&#x9;&#x9; &#x9;if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_other_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_other_yearly_class_2(amount) else get_A_for_other_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;&#x9;let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_other_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_other_yearly_class_2(amount) else get_B_for_other_yearly_class_1(amount) endif endif in&#xA;&#x9;&#x9;    let res:Real = round_lower_euros(a * local_amount - b) in&#xA;            let max:Real = if(classe=Tax_Class_Category::Two) then 300000 else 150000 endif in&#xA;            &#xA;&#x9;&#x9;    if(amount&lt;max) then&#xA;&#x9;&#x9;    let final_res:Real= round_lower_euros(res*1.07) in&#xA;&#x9;&#x9;    if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif&#xA;&#x9;&#x9;    else &#xA;&#x9;&#x9;    let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in&#xA;&#x9;&#x9; &#x9;let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in&#xA;&#x9;&#x9; &#x9;if(final_res&lt;12)then&#xA;&#x9;&#x9;    0&#xA;&#x9;&#x9;    else&#xA;&#x9;&#x9;    final_res&#xA;&#x9;&#x9;    endif &#xA;&#x9;&#x9;    endif  &#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <ownedParameter xmi:id="_C2RukG3OEeWcOt8eh6sd-w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_GJ4NUG3OEeWcOt8eh6sd-w" name="amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_JlWOoG3OEeWcOt8eh6sd-w" name="local_amount">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
        <ownedParameter xmi:id="_NdryIG3OEeWcOt8eh6sd-w" name="classe" type="Tax_Class_Category"/>
        <ownedParameter xmi:id="_QqTfIG3OEeWcOt8eh6sd-w" name="income_type">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.56" memberEnd="Tax_Payer-from_law FromLaw-taxPayer"/>
    <packagedElement xmi:type="uml:Class" xmi:id="FromAgent" name="FromAgent">
      <ownedAttribute xmi:id="FromAgent-taxation_year" name="taxation_year" visibility="public" isOrdered="true" isUnique="false">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="FromAgent-taxPayer" name="taxPayer" type="Tax_Payer" isOrdered="true" association="_packagedElement.58">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_239Z4OKNEeSbvsXPkSdkbw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_23-oAOKNEeSbvsXPkSdkbw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_mePwsJLREeSsDc98mGjcqQ" name="is_dependent_eligible_for_CE_Not_In_Houshold_Children_Care">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_bpKHEJQ9EeSMZqrJQmR94g" name="expense" type="Expense" association="_bpLVMJQ9EeSMZqrJQmR94g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_bpKHEZQ9EeSMZqrJQmR94g"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_bpKHEpQ9EeSMZqrJQmR94g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_n-YXUJQ9EeSMZqrJQmR94g" name="is_eligible_debt">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_suXD4ZLREeSsDc98mGjcqQ" name="dependent" type="Dependent" association="_suXD4JLREeSsDc98mGjcqQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_suXD4pLREeSsDc98mGjcqQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_suXD45LREeSsDc98mGjcqQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.58" memberEnd="Tax_Payer-from_agent FromAgent-taxPayer"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Fiscal_Address" name="Fiscal_Address">
      <generalization xmi:id="Fiscal_Address-_generalization.0" general="Address"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Habitual_Address" name="Habitual_Address">
      <generalization xmi:id="Habitual_Address-_generalization.0" general="Address"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Marriage_Record" name="Marriage_Record">
      <generalization xmi:id="Marriage_Record-_generalization.0" general="Legal_Union_Record"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Non_Resident_Tax_Payer" name="Non_Resident_Tax_Payer">
      <generalization xmi:id="Non_Resident_Tax_Payer-_generalization.0" general="Tax_Payer"/>
      <ownedAttribute xmi:id="Non_Resident_Tax_Payer-is_assimilated_to_resident" name="is_assimilated_to_resident" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Non_Resident_Tax_Payer-is_assimilated_to_resident-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Partnership_Record" name="Partnership_Record">
      <generalization xmi:id="Partnership_Record-_generalization.0" general="Legal_Union_Record"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Resident_Tax_Payer" name="Resident_Tax_Payer">
      <generalization xmi:id="Resident_Tax_Payer-_generalization.0" general="Tax_Payer"/>
      <ownedAttribute xmi:id="Resident_Tax_Payer-test" name="test" visibility="public" isOrdered="true" isDerived="true">
        <eAnnotations xmi:id="Resident_Tax_Payer-test-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot" source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details xmi:id="Resident_Tax_Payer-test-_http2F2Fwww.eclipse.org2Femf2F20022FEcore2FOCL2FPivot-_details.0" key="derivation" value="self.oclAsType(Tax_Payer).from_agent.taxation_year=2014"/>
        </eAnnotations>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Trade_and_Business_Income" name="Trade_and_Business_Income">
      <generalization xmi:id="Trade_and_Business_Income-_generalization.0" general="Income_Type"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Agriculture_and_Forestry_Income" name="Agriculture_and_Forestry_Income">
      <generalization xmi:id="Agriculture_and_Forestry_Income-_generalization.0" general="Income_Type"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Pensions_and_Annuities_Income" name="Pensions_and_Annuities_Income">
      <generalization xmi:id="Pensions_and_Annuities_Income-_generalization.0" general="Income_Type"/>
      <ownedAttribute xmi:id="Pensions_and_Annuities_Income-occasional_payement" name="occasional_payement" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GTLfQJHpEeW69ojjkUQtrg"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GTUCIJHpEeW69ojjkUQtrg" value="1"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Pensions_and_Annuities_Income-occasional_payement-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Capital_and_Investments_Income" name="Capital_and_Investments_Income">
      <generalization xmi:id="Capital_and_Investments_Income-_generalization.0" general="Income_Type"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Employment_Income" name="Employment_Income">
      <generalization xmi:id="Employment_Income-_generalization.0" general="Income_Type"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Rentals_and_Leases_Income" name="Rentals_and_Leases_Income">
      <generalization xmi:id="Rentals_and_Leases_Income-_generalization.0" general="Income_Type"/>
      <ownedAttribute xmi:id="Rentals_and_Leases_Income-is_periodic" name="is_periodic" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Rentals_and_Leases_Income-is_periodic-_defaultValue" value="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Foreign_Income" name="Foreign_Income">
      <generalization xmi:id="Foreign_Income-_generalization.0" general="Income"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Local_Income" name="Local_Income">
      <generalization xmi:id="Local_Income-_generalization.0" general="Income"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="CIM" name="CIM">
      <generalization xmi:id="CIM-_generalization.0" general="Income_Tax_Credit"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="CIP" name="CIP">
      <generalization xmi:id="CIP-_generalization.0" general="Income_Tax_Credit"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="CIS" name="CIS">
      <generalization xmi:id="CIS-_generalization.0" general="Income_Tax_Credit"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="FD" name="FD">
      <generalization xmi:id="FD-_generalization.0" general="Professional_Expenses_Deduction"/>
      <ownedAttribute xmi:id="FD-distance_declared_in_january" name="distance_declared_in_january" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="FD-calculated_distance" name="calculated_distance" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedOperation xmi:id="FD-compute_distance_unit_between_home_and_workpalce" name="compute_distance_unit_between_home_and_workpalce" visibility="public">
        <ownedParameter xmi:id="FD-compute_distance_unit_between_home_and_workpalce-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Professional_Expenses_Deduction" name="Professional_Expenses_Deduction"/>
    <packagedElement xmi:type="uml:Class" xmi:id="FO" name="FO">
      <generalization xmi:id="FO-_generalization.0" general="Professional_Expenses_Deduction"/>
      <ownedAttribute xmi:id="FO-rate_type_for_FO" name="rate_type_for_FO" visibility="public" type="Type_of_Rate" isOrdered="true" isDerived="true"/>
      <ownedOperation xmi:id="FO-compute_disability_flat_rate" name="compute_disability_flat_rate" visibility="public">
        <ownedParameter xmi:id="FO-compute_disability_flat_rate-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="FO-compute_regular_flat_rate" name="compute_regular_flat_rate" visibility="public">
        <ownedParameter xmi:id="FO-compute_regular_flat_rate-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="DS_for_Permanent_Expense" name="DS_for_Permanent_Expense">
      <generalization xmi:id="DS_for_Permanent_Expense-_generalization.0" general="DS"/>
      <ownedAttribute xmi:id="DS_for_Permanent_Expense-permanent_expense_category" name="permanent_expense_category" visibility="public" type="Category_of_Permanent_Expense" isOrdered="true"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="DS" name="DS">
      <ownedRule xmi:id="_XRpF4D9zEeWzD95_WvVH8Q" name="Child_allawances">
        <specification xmi:type="uml:LiteralString" xmi:id="_XRps8D9zEeWzD95_WvVH8Q" value=""/>
      </ownedRule>
      <ownedAttribute xmi:id="DS-maximum_deductible_amount" name="maximum_deductible_amount" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_UVY60EzrEeaVApgXPK28xA" name="id3" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Category_of_Permanent_Expense" name="Category_of_Permanent_Expense">
      <ownedLiteral xmi:id="Category_of_Permanent_Expense-MISCELLANEOUS_DEBT" name="MISCELLANEOUS_DEBT"/>
      <ownedLiteral xmi:id="Category_of_Permanent_Expense-ALIMONY" name="ALIMONY"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="DS_for_Interest_Expense" name="DS_for_Interest_Expense">
      <generalization xmi:id="DS_for_Interest_Expense-_generalization.0" general="DS"/>
      <ownedOperation xmi:id="DS_for_Interest_Expense-compute_maximum_deductible_amount" name="compute_maximum_deductible_amount" visibility="public">
        <ownedParameter xmi:id="DS_for_Interest_Expense-compute_maximum_deductible_amount-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
        <ownedParameter xmi:id="DS_for_Interest_Expense-compute_maximum_deductible_amount-IN_children_with_allowances" name="IN_children_with_allowances" type="Dependent">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="DS_for_Interest_Expense-compute_maximum_deductible_amount-IN_children_with_allowances-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="DS_for_Interest_Expense-compute_maximum_deductible_amount-IN_children_with_allowances-_upperValue" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="DS_for_Interest_Expense-compute_maximum_deductible_amount-IN_legal_union" name="IN_legal_union" type="Legal_Union_Record">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="DS_for_Interest_Expense-compute_maximum_deductible_amount-IN_legal_union-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="DS_for_Interest_Expense-compute_maximum_deductible_amount-IN_legal_union-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="DS_for_Health_and_Pension_Insurance" name="DS_for_Health_and_Pension_Insurance">
      <generalization xmi:id="DS_for_Health_and_Pension_Insurance-_generalization.0" general="DS"/>
      <ownedAttribute xmi:id="DS_for_Health_and_Pension_Insurance-insurance_category" name="insurance_category" visibility="public" type="Category_of_Health_and_Pension_Insurances" isOrdered="true"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Category_of_Health_and_Pension_Insurances" name="Category_of_Health_and_Pension_Insurances">
      <ownedLiteral xmi:id="Category_of_Health_and_Pension_Insurances-MANDATORY_HEALTH_AND_PENSION_INSURANCE" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE"/>
      <ownedLiteral xmi:id="Category_of_Health_and_Pension_Insurances-ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE"/>
      <ownedLiteral xmi:id="Category_of_Health_and_Pension_Insurances-CONTINUED_HEALTH_AND_PENSION_INSURANCE" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="DS_for_Private_Insurance_and_Plan" name="DS_for_Private_Insurance_and_Plan">
      <generalization xmi:id="DS_for_Private_Insurance_and_Plan-_generalization.0" general="DS"/>
      <ownedAttribute xmi:id="DS_for_Private_Insurance_and_Plan-private_insurance_and_plan_category" name="private_insurance_and_plan_category" visibility="public" type="Category_of_Private_Insurance_and_Plan" isOrdered="true"/>
      <ownedAttribute xmi:id="DS_for_Private_Insurance_and_Plan-increase_for_life_insurance" name="increase_for_life_insurance" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="DS_for_Private_Insurance_and_Plan-maximum_deductible_amount_for_private_insurance" name="maximum_deductible_amount_for_private_insurance" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="DS_for_Private_Insurance_and_Plan-maximum_deductible_amount_for_old_age_pension_plan" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedOperation xmi:id="DS_for_Private_Insurance_and_Plan-compute_increase_for_life_insurance" name="compute_increase_for_life_insurance" visibility="public">
        <ownedParameter xmi:id="DS_for_Private_Insurance_and_Plan-compute_increase_for_life_insurance-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="DS_for_Private_Insurance_and_Plan-compute_maximum_deductible_amount_for_private_insruance" name="compute_maximum_deductible_amount_for_private_insruance" visibility="public">
        <ownedParameter xmi:id="DS_for_Private_Insurance_and_Plan-compute_maximum_deductible_amount_for_private_insruance-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="DS_for_Private_Insurance_and_Plan-compute_maximum_deductible_amount_for_old_age_pension_plan" name="compute_maximum_deductible_amount_for_old_age_pension_plan" visibility="public">
        <ownedParameter xmi:id="DS_for_Private_Insurance_and_Plan-compute_maximum_deductible_amount_for_old_age_pension_plan-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="Category_of_Private_Insurance_and_Plan" name="Category_of_Private_Insurance_and_Plan">
      <ownedLiteral xmi:id="Category_of_Private_Insurance_and_Plan-PRIVATE_INSURANCE" name="PRIVATE_INSURANCE"/>
      <ownedLiteral xmi:id="Category_of_Private_Insurance_and_Plan-PRIVATE_LIFE_INSURANCE" name="PRIVATE_LIFE_INSURANCE"/>
      <ownedLiteral xmi:id="Category_of_Private_Insurance_and_Plan-COMPANY_MEMBERS_PRIVATE_INSURANCE" name="COMPANY_MEMBERS_PRIVATE_INSURANCE"/>
      <ownedLiteral xmi:id="Category_of_Private_Insurance_and_Plan-HOUSING_SAVING_PLAN" name="HOUSING_SAVING_PLAN"/>
      <ownedLiteral xmi:id="Category_of_Private_Insurance_and_Plan-OLD_AGE_PENSION_PLAN" name="OLD_AGE_PENSION_PLAN"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="DS_for_Loss_Carryforward" name="DS_for_Loss_Carryforward">
      <generalization xmi:id="DS_for_Loss_Carryforward-_generalization.0" general="DS"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="DS_for_Donation" name="DS_for_Donation">
      <generalization xmi:id="DS_for_Donation-_generalization.0" general="DS"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Permanent_Expense" name="Permanent_Expense">
      <generalization xmi:id="Permanent_Expense-_generalization.0" general="Special_Expense_DS"/>
      <ownedAttribute xmi:id="Permanent_Expense-category" name="category" visibility="public" type="Category_of_Permanent_Expense" isOrdered="true"/>
      <ownedAttribute xmi:id="Permanent_Expense-is_eligible_for_deduction" name="is_eligible_for_deduction" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Permanent_Expense-is_eligible_for_deduction-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
      <ownedOperation xmi:id="Permanent_Expense-is_expense_eligible_for_deduction" name="is_expense_eligible_for_deduction" visibility="public">
        <ownedParameter xmi:id="Permanent_Expense-is_expense_eligible_for_deduction-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Permanent_Expense-is_expense_eligible_for_deduction-IN_agent_response" name="IN_agent_response" isOrdered="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Special_Expense_DS" name="Special_Expense_DS">
      <generalization xmi:id="Special_Expense_DS-_generalization.0" general="Expense"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Interest_Expense" name="Interest_Expense">
      <generalization xmi:id="Interest_Expense-_generalization.0" general="Special_Expense_DS"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Private_Insurance_and_Plan" name="Private_Insurance_and_Plan">
      <generalization xmi:id="Private_Insurance_and_Plan-_generalization.0" general="Special_Expense_DS"/>
      <ownedAttribute xmi:id="Private_Insurance_and_Plan-category" name="category" visibility="public" type="Category_of_Private_Insurance_and_Plan" isOrdered="true"/>
      <ownedAttribute xmi:id="Private_Insurance_and_Plan-duration_of_contract" name="duration_of_contract" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Private_Insurance_and_Plan-is_private_insurance_and_plan_eligible_for_deduction" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Private_Insurance_and_Plan-is_private_insurance_and_plan_eligible_for_deduction-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
      <ownedOperation xmi:id="Private_Insurance_and_Plan-is_private_insurance_and_plan_eligible_for_deduction.1" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public">
        <ownedParameter xmi:id="Private_Insurance_and_Plan-is_private_insurance_and_plan_eligible_for_deduction.1-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Health_and_Pension_Insurance" name="Health_and_Pension_Insurance">
      <generalization xmi:id="Health_and_Pension_Insurance-_generalization.0" general="Special_Expense_DS"/>
      <ownedAttribute xmi:id="Health_and_Pension_Insurance-category" name="category" visibility="public" type="Category_of_Health_and_Pension_Insurances" isOrdered="true"/>
      <ownedAttribute xmi:id="Health_and_Pension_Insurance-is_related_to_additional_salary" name="is_related_to_additional_salary" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Health_and_Pension_Insurance-is_related_to_additional_salary-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Donation" name="Donation">
      <generalization xmi:id="Donation-_generalization.0" general="Special_Expense_DS"/>
      <ownedAttribute xmi:id="Donation-beneficiary" name="beneficiary1" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EString"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Donation-is_beneficiary_eligible" name="is_beneficiary_eligible" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Donation-is_beneficiary_eligible-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Donation-is_donation_reported" name="is_donation_reported" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Donation-get_beneficiary_eligibility_for_deduction" name="get_beneficiary_eligibility_for_deduction" visibility="public">
        <ownedParameter xmi:id="Donation-get_beneficiary_eligibility_for_deduction-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Loss_Carryforward" name="Loss_Carryforward">
      <generalization xmi:id="Loss_Carryforward-_generalization.0" general="Special_Expense_DS"/>
      <ownedAttribute xmi:id="Loss_Carryforward-regular_accountability" name="regular_accountability" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Loss_Carryforward-compensation_by_other_means" name="compensation_by_other_means" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Loss_Carryforward-tax_payer_has_inherited_business_ownership" name="tax_payer_has_inherited_business_ownership" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Loss_Carryforward-tax_payer_has_inherited_business_ownership-_defaultValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Loss_Carryforward-tax_payer_has_been_partner_in_business" name="tax_payer_has_been_partner_in_business" visibility="public" isOrdered="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="Loss_Carryforward-tax_payer_has_been_partner_in_business-_defaultValue" value="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </defaultValue>
      </ownedAttribute>
      <ownedOperation xmi:id="Loss_Carryforward-is_accountability_regular" name="is_accountability_regular" visibility="public">
        <ownedParameter xmi:id="Loss_Carryforward-is_accountability_regular-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Loss_Carryforward-is_compensated_by_other_means" name="is_compensated_by_other_means" visibility="public">
        <ownedParameter xmi:id="Loss_Carryforward-is_compensated_by_other_means-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Loss_Carryforward-has_been_tax_payer_partner_in_business" name="has_been_tax_payer_partner_in_business" visibility="public">
        <ownedParameter xmi:id="Loss_Carryforward-has_been_tax_payer_partner_in_business-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Loss_Carryforward-has_tax_payer_inherited_business_ownership" name="has_tax_payer_inherited_business_ownership" visibility="public">
        <ownedParameter xmi:id="Loss_Carryforward-has_tax_payer_inherited_business_ownership-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Spousal_Expense_AC" name="Spousal_Expense_AC">
      <generalization xmi:id="Spousal_Expense_AC-_generalization.0" general="Expense"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Extraordinary_Expense_CE" name="Extraordinary_Expense_CE">
      <generalization xmi:id="Extraordinary_Expense_CE-_generalization.0" general="Expense"/>
      <ownedAttribute xmi:id="Extraordinary_Expense_CE-thresholded_deduction_percentage" name="thresholded_deduction_percentage" visibility="public" isOrdered="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Extraordinary_Expense_CE-ce_type" name="ce_type" visibility="public" type="CE_Type" isOrdered="true"/>
      <ownedOperation xmi:id="Extraordinary_Expense_CE-is_above_thresholded_deduction_percentage_for_CE" name="is_above_thresholded_deduction_percentage_for_CE" visibility="public">
        <ownedParameter xmi:id="Extraordinary_Expense_CE-is_above_thresholded_deduction_percentage_for_CE-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Extraordinary_Expense_CE-compute_thresholded_deduction_percentage_for_CE" name="compute_thresholded_deduction_percentage_for_CE" visibility="public">
        <ownedParameter xmi:id="Extraordinary_Expense_CE-compute_thresholded_deduction_percentage_for_CE-_ownedParameter.0" isOrdered="true" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
        <ownedParameter xmi:id="Extraordinary_Expense_CE-compute_thresholded_deduction_percentage_for_CE-IN_thresholded_deduction_percentage" name="IN_thresholded_deduction_percentage" isOrdered="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBigDecimal"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Travel_Expense_FD" name="Travel_Expense_FD">
      <generalization xmi:id="Travel_Expense_FD-_generalization.0" general="Professional_Expense"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Professional_Expense" name="Professional_Expense">
      <generalization xmi:id="Professional_Expense-_generalization.0" general="Expense"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Miscellaneous_Expense_FO" name="Miscellaneous_Expense_FO">
      <generalization xmi:id="Miscellaneous_Expense_FO-_generalization.0" general="Professional_Expense"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0yLxwIH5EeSH_sby466C_w" name="Tax_Property">
      <ownedAttribute xmi:id="_4bpLwIH5EeSH_sby466C_w" name="starting_year">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EInt"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="__YPKcIH5EeSH_sby466C_w" name="taxed_jointly">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_GvQbUIH6EeSH_sby466C_w"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CxtcIqVEeSCrr7uegGAVw" name="union_record" type="Legal_Union_Record" association="_9Cy7kIqVEeSCrr7uegGAVw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CxtcYqVEeSCrr7uegGAVw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CxtcoqVEeSCrr7uegGAVw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_TD2lAEzsEeaVApgXPK28xA" name="id10" isID="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_7auHsIOIEeSemtkAhxylbQ" name="Separation_Causes">
      <ownedLiteral xmi:id="_Qi5bUIOJEeSemtkAhxylbQ" name="NONE"/>
      <ownedLiteral xmi:id="_91HGgIOIEeSemtkAhxylbQ" name="DIVORCE"/>
      <ownedLiteral xmi:id="_DNoDUIOJEeSemtkAhxylbQ" name="SEPARATION_DE_FAIT"/>
      <ownedLiteral xmi:id="_HzD9YIOJEeSemtkAhxylbQ" name="SEPARATION_BY_COURT"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_dTr3IIOSEeSemtkAhxylbQ" name="Legal_Union_Types">
      <ownedLiteral xmi:id="_f4bEwIOSEeSemtkAhxylbQ" name="MARIAGE"/>
      <ownedLiteral xmi:id="_rawfgIOSEeSemtkAhxylbQ" name="PARTNERSHIP"/>
      <ownedLiteral xmi:id="_vpTjkIOSEeSemtkAhxylbQ" name="OTHER"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oA2J8IXuEeSLiOAbrK2uyQ" memberEnd="_oA2J8YXuEeSLiOAbrK2uyQ _oAwqYIXuEeSLiOAbrK2uyQ"/>
    <packagedElement xmi:type="uml:Interface" xmi:id="_1gja4IXvEeSLiOAbrK2uyQ" name="Tax_Case"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_5Yy38IYUEeS819S0h0iEVw" memberEnd="_5Yy38YYUEeS819S0h0iEVw _5YyQ4IYUEeS819S0h0iEVw">
      <ownedEnd xmi:id="_5Yy38YYUEeS819S0h0iEVw" name="legal_union_A" type="Legal_Union_Record" association="_5Yy38IYUEeS819S0h0iEVw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5Yy38oYUEeS819S0h0iEVw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Yy384YUEeS819S0h0iEVw" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0ISyMIYVEeS819S0h0iEVw" memberEnd="_0ISyMYYVEeS819S0h0iEVw _0ISLIIYVEeS819S0h0iEVw">
      <ownedEnd xmi:id="_0ISyMYYVEeS819S0h0iEVw" name="legal_union_B" type="Legal_Union_Record" association="_0ISyMIYVEeS819S0h0iEVw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ISyMoYVEeS819S0h0iEVw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ISyM4YVEeS819S0h0iEVw" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_ys1IMInjEeS51qv-dTzbfg" memberEnd="_ys1IMYnjEeS51qv-dTzbfg _ysz6EInjEeS51qv-dTzbfg"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9Cy7kIqVEeSCrr7uegGAVw" memberEnd="_9Cy7kYqVEeSCrr7uegGAVw _9CxtcIqVEeSCrr7uegGAVw"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_tLMGQJASEeSrKuFMY7nEzg" memberEnd="_tLMGQZASEeSrKuFMY7nEzg _tLDjYJASEeSrKuFMY7nEzg"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_suXD4JLREeSsDc98mGjcqQ" memberEnd="_suXD4ZLREeSsDc98mGjcqQ _suTZgJLREeSsDc98mGjcqQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_Mr92cJN2EeSS6JjHMC2a3A" memberEnd="_Mr92cZN2EeSS6JjHMC2a3A _Mr8oUJN2EeSS6JjHMC2a3A"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_4QQ94D-FEeWJhua38hb9gw" name="reciver" memberEnd="_4QQ94T-FEeWJhua38hb9gw _4QQW0D-FEeWJhua38hb9gw" navigableOwnedEnd="_4QQW0D-FEeWJhua38hb9gw">
      <ownedEnd xmi:id="_4QQW0D-FEeWJhua38hb9gw" name="external_Allowance" type="External_Allowance" association="_4QQ94D-FEeWJhua38hb9gw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4QQW0T-FEeWJhua38hb9gw"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4QQW0j-FEeWJhua38hb9gw" value="*"/>
      </ownedEnd>
    </packagedElement>
    <profileApplication xmi:id="_profileApplication.0">
      <eAnnotations xmi:id="_profileApplication.0-_http2F2Fwww.eclipse.org2Fuml22F2.0.02FUML" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <Ecore:EPackage xmi:id="_1" base_Package="_0" nsPrefix="TaxCard"/>
  <Ecore:EEnum xmi:id="_2" base_Enumeration="Grantor"/>
  <Ecore:EEnumLiteral xmi:id="_3" base_EnumerationLiteral="Grantor-ACD" literal="ACD"/>
  <Ecore:EEnumLiteral xmi:id="_4" base_EnumerationLiteral="Grantor-Employer" literal="Employer"/>
  <Ecore:EEnumLiteral xmi:id="_5" base_EnumerationLiteral="Grantor-CNPF" literal="CNPF"/>
  <Ecore:EEnumLiteral xmi:id="_6" base_EnumerationLiteral="Grantor-CEDIES" literal="CEDIES"/>
  <Ecore:EEnumLiteral xmi:id="_7" base_EnumerationLiteral="Grantor-SNJ" literal="SNJ"/>
  <Ecore:EEnumLiteral xmi:id="_8" base_EnumerationLiteral="Grantor-CNAP" literal="CNAP"/>
  <Ecore:EClass xmi:id="_9" base_Class="Constants"/>
  <Ecore:EEnum xmi:id="_10" base_Enumeration="Disability_Types"/>
  <Ecore:EEnumLiteral xmi:id="_11" base_EnumerationLiteral="Disability_Types-A" literal="A"/>
  <Ecore:EEnumLiteral xmi:id="_12" base_EnumerationLiteral="Disability_Types-B" literal="B"/>
  <Ecore:EEnumLiteral xmi:id="_13" base_EnumerationLiteral="Disability_Types-C" literal="C"/>
  <Ecore:EEnumLiteral xmi:id="_14" base_EnumerationLiteral="Disability_Types-D" literal="D"/>
  <Ecore:EEnumLiteral xmi:id="_15" base_EnumerationLiteral="Disability_Types-E" literal="E"/>
  <Ecore:EEnum xmi:id="_17" base_Enumeration="Country"/>
  <Ecore:EEnumLiteral xmi:id="_18" base_EnumerationLiteral="Country-LU" literal="LU"/>
  <Ecore:EEnumLiteral xmi:id="_19" base_EnumerationLiteral="Country-FR" literal="FR"/>
  <Ecore:EEnumLiteral xmi:id="_20" base_EnumerationLiteral="Country-BE" literal="BE"/>
  <Ecore:EEnumLiteral xmi:id="_21" base_EnumerationLiteral="Country-DE" literal="DE"/>
  <Ecore:EEnumLiteral xmi:id="_22" base_EnumerationLiteral="Country-NL" literal="NL"/>
  <Ecore:EEnumLiteral xmi:id="_23" base_EnumerationLiteral="Country-OTHER" literal="OTHER"/>
  <Ecore:EEnum xmi:id="_24" base_Enumeration="Tax_Card_Type"/>
  <Ecore:EEnumLiteral xmi:id="_25" base_EnumerationLiteral="Tax_Card_Type-Principal" literal="Principal"/>
  <Ecore:EEnumLiteral xmi:id="_26" base_EnumerationLiteral="Tax_Card_Type-Additional" literal="Additional"/>
  <Ecore:EEnum xmi:id="_27" base_Enumeration="Tax_Office"/>
  <Ecore:EEnumLiteral xmi:id="_28" base_EnumerationLiteral="Tax_Office-RTS_2" literal="RTS_2"/>
  <Ecore:EEnumLiteral xmi:id="_29" base_EnumerationLiteral="Tax_Office-RTS_3" literal="RTS_3"/>
  <Ecore:EEnumLiteral xmi:id="_30" base_EnumerationLiteral="Tax_Office-RTS_Esch" literal="RTS_Esch"/>
  <Ecore:EEnumLiteral xmi:id="_31" base_EnumerationLiteral="Tax_Office-RTS_Ettelbruck" literal="RTS_Ettelbruck"/>
  <Ecore:EEnum xmi:id="_32" base_Enumeration="Tax_Class_Category"/>
  <Ecore:EEnumLiteral xmi:id="_33" base_EnumerationLiteral="Tax_Class_Category-One" literal="One"/>
  <Ecore:EEnumLiteral xmi:id="_34" base_EnumerationLiteral="Tax_Class_Category-One_A" literal="One_A"/>
  <Ecore:EEnumLiteral xmi:id="_35" base_EnumerationLiteral="Tax_Class_Category-Two" literal="Two"/>
  <Ecore:EEnum xmi:id="_36" base_Enumeration="Job_Activity"/>
  <Ecore:EEnumLiteral xmi:id="_37" base_EnumerationLiteral="Job_Activity-Salary" literal="Salary"/>
  <Ecore:EEnumLiteral xmi:id="_38" base_EnumerationLiteral="Job_Activity-Pension" literal="Pension"/>
  <Ecore:EEnumLiteral xmi:id="_39" base_EnumerationLiteral="Job_Activity-Annuity" literal="Annuity"/>
  <Ecore:EEnum xmi:id="_40" base_Enumeration="Town"/>
  <Ecore:EEnumLiteral xmi:id="_41" base_EnumerationLiteral="Town-Luxembourg_city" literal="Luxembourg_city"/>
  <Ecore:EEnumLiteral xmi:id="_42" base_EnumerationLiteral="Town-Bertrange" literal="Bertrange"/>
  <Ecore:EEnumLiteral xmi:id="_43" base_EnumerationLiteral="Town-Strassen" literal="Strassen"/>
  <Ecore:EEnumLiteral xmi:id="_44" base_EnumerationLiteral="Town-Bettembourg" literal="Bettembourg"/>
  <Ecore:EEnumLiteral xmi:id="_45" base_EnumerationLiteral="Town-Beaufort" literal="Beaufort"/>
  <Ecore:EEnum xmi:id="_46" base_Enumeration="Type_of_Rate"/>
  <Ecore:EEnumLiteral xmi:id="_47" base_EnumerationLiteral="Type_of_Rate-REGULAR" literal="REGULAR"/>
  <Ecore:EEnumLiteral xmi:id="_48" base_EnumerationLiteral="Type_of_Rate-REAL_COST" literal="REAL_COST"/>
  <Ecore:EEnum xmi:id="_49" base_Enumeration="CE_Type"/>
  <Ecore:EEnumLiteral xmi:id="_50" base_EnumerationLiteral="CE_Type-INALIDITY_AND_INFIRMITY" literal="INALIDITY_AND_INFIRMITY"/>
  <Ecore:EEnumLiteral xmi:id="_51" base_EnumerationLiteral="CE_Type-DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" literal="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD"/>
  <Ecore:EEnumLiteral xmi:id="_52" base_EnumerationLiteral="CE_Type-CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" literal="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD"/>
  <Ecore:EEnum xmi:id="_53" base_Enumeration="Expense_Purpose"/>
  <Ecore:EEnumLiteral xmi:id="_54" base_EnumerationLiteral="Expense_Purpose-HOUSE_CARE" literal="HOUSE_CARE"/>
  <Ecore:EEnumLiteral xmi:id="_55" base_EnumerationLiteral="Expense_Purpose-CHILD_CARE" literal="CHILD_CARE"/>
  <Ecore:EEnumLiteral xmi:id="_56" base_EnumerationLiteral="Expense_Purpose-DEPENDENCE_CARE" literal="DEPENDENCE_CARE"/>
  <Ecore:EEnumLiteral xmi:id="_57" base_EnumerationLiteral="Expense_Purpose-OTHER" literal="OTHER"/>
  <Ecore:EEnum xmi:id="_58" base_Enumeration="Dependent_Type"/>
  <Ecore:EEnumLiteral xmi:id="_59" base_EnumerationLiteral="Dependent_Type-CHILD" literal="CHILD"/>
  <Ecore:EEnumLiteral xmi:id="_60" base_EnumerationLiteral="Dependent_Type-SPOUSE" literal="SPOUSE"/>
  <Ecore:EEnumLiteral xmi:id="_61" base_EnumerationLiteral="Dependent_Type-RELATIVE" literal="RELATIVE"/>
  <Ecore:EEnumLiteral xmi:id="_62" base_EnumerationLiteral="Dependent_Type-OTHER_FAMILY_MEMBER" literal="OTHER_FAMILY_MEMBER"/>
  <Ecore:EClass xmi:id="_63" base_Class="Income_Tax"/>
  <Ecore:EReference xmi:id="_64" base_Property="Income_Tax-taxPayer"/>
  <Ecore:EClass xmi:id="_65" base_Class="Tax_Payer"/>
  <Ecore:EReference xmi:id="_67" base_Property="Tax_Payer-dependents"/>
  <Ecore:EReference xmi:id="_69" base_Property="Tax_Payer-expenses"/>
  <Ecore:EReference xmi:id="_73" base_Property="Tax_Payer-incomes"/>
  <Ecore:EReference xmi:id="_75" base_Property="Tax_Payer-from_law"/>
  <Ecore:EReference xmi:id="_76" base_Property="Tax_Payer-from_agent"/>
  <Ecore:EOperation xmi:id="_77" base_Operation="Tax_Payer-is_dependent_part_of_the_household"/>
  <Ecore:EParameter xmi:id="_78" base_Parameter="Tax_Payer-is_dependent_part_of_the_household-IN_dependent"/>
  <Ecore:EOperation xmi:id="_79" base_Operation="Tax_Payer-number_of_months_of_allowance"/>
  <Ecore:EOperation xmi:id="_80" base_Operation="Tax_Payer-deduction_according_disability_rate"/>
  <Ecore:EClass xmi:id="_81" base_Class="Physical_Person"/>
  <Ecore:EReference xmi:id="_83" base_Property="Physical_Person-addresses"/>
  <Ecore:EOperation xmi:id="_86" base_Operation="Physical_Person-is_separated_from"/>
  <Ecore:EParameter xmi:id="_87" base_Parameter="Physical_Person-is_separated_from-IN_person"/>
  <Ecore:EOperation xmi:id="_88" base_Operation="Physical_Person-is_person_affiliated_personnaly_to_social_security"/>
  <Ecore:EClass xmi:id="_89" base_Class="External_Allowance"/>
  <Ecore:EClass xmi:id="_91" base_Class="Address"/>
  <Ecore:EReference xmi:id="_92" base_Property="Address-taxPayer"/>
  <Ecore:EClass xmi:id="_93" base_Class="Legal_Union_Record"/>
  <Ecore:EClass xmi:id="_96" base_Class="Dependent"/>
  <Ecore:EReference xmi:id="_98" base_Property="Dependent-responsible_person"/>
  <Ecore:EReference xmi:id="_100" base_Property="Dependent-expense"/>
  <Ecore:EOperation xmi:id="_101" base_Operation="Dependent-compute_if_dependent_receives_allowances_eligible_for_CIM"/>
  <Ecore:EOperation xmi:id="_102" base_Operation="Dependent-compute_if_dependent_receives_allowances_eligible_for_DS"/>
  <Ecore:EOperation xmi:id="_103" base_Operation="Dependent-compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care"/>
  <Ecore:EOperation xmi:id="_104" base_Operation="Dependent-is_dependent_following_continued_studies"/>
  <Ecore:EParameter xmi:id="_105" base_Parameter="Dependent-is_dependent_following_continued_studies-IN_continued_studies"/>
  <Ecore:EClass xmi:id="_106" base_Class="Household"/>
  <Ecore:EClass xmi:id="_109" base_Class="Expense"/>
  <Ecore:EReference xmi:id="_111" base_Property="Expense-dependent"/>
  <Ecore:EReference xmi:id="_112" base_Property="Expense-income"/>
  <Ecore:EClass xmi:id="_114" base_Class="Income"/>
  <Ecore:EReference xmi:id="_115" base_Property="Income-income_type"/>
  <Ecore:EReference xmi:id="_116" base_Property="Income-tax_card"/>
  <Ecore:EReference xmi:id="_117" base_Property="Income-expenses"/>
  <Ecore:EReference xmi:id="_118" base_Property="Income-taxPayer"/>
  <Ecore:EReference xmi:id="_119" base_Property="Income-details"/>
  <Ecore:EOperation xmi:id="_120" base_Operation="Income-compute_duration_of_contract"/>
  <Ecore:EOperation xmi:id="_121" base_Operation="Income-compute_duration_of_contract_within_taxation_year"/>
  <Ecore:EParameter xmi:id="_122" base_Parameter="Income-compute_duration_of_contract_within_taxation_year-IN_date"/>
  <Ecore:EOperation xmi:id="_123" base_Operation="Income-prorata_worked_months"/>
  <Ecore:EOperation xmi:id="_124" base_Operation="Income-prorata_worked_days"/>
  <Ecore:EOperation xmi:id="_125" base_Operation="Income-prorata_period"/>
  <Ecore:EOperation xmi:id="_126" base_Operation="Income-income_per_day"/>
  <Ecore:EOperation xmi:id="_127" base_Operation="Income-income_per_month"/>
  <Ecore:EOperation xmi:id="_128" base_Operation="Income-income_per_year"/>
  <Ecore:EClass xmi:id="_129" base_Class="Income_Type"/>
  <Ecore:EReference xmi:id="_130" base_Property="Income_Type-income"/>
  <Ecore:EClass xmi:id="_131" base_Class="Tax_Card"/>
  <Ecore:EReference xmi:id="_133" isVolatile="true" base_Property="Tax_Card-tax_payers_address"/>
  <Ecore:EReference xmi:id="_134" base_Property="Tax_Card-income_Tax_Credit"/>
  <Ecore:EReference xmi:id="_136" base_Property="Tax_Card-previous"/>
  <Ecore:EReference xmi:id="_137" base_Property="Tax_Card-current_tax_card"/>
  <Ecore:EReference xmi:id="_138" base_Property="Tax_Card-income"/>
  <Ecore:EClass xmi:id="_144" base_Class="Income_Tax_Credit"/>
  <Ecore:EReference xmi:id="_145" base_Property="Income_Tax_Credit-taxPayer"/>
  <Ecore:EReference xmi:id="_146" base_Property="Income_Tax_Credit-taxation_Frame"/>
  <Ecore:EClass xmi:id="_151" base_Class="Income_Detail"/>
  <Ecore:EReference xmi:id="_152" base_Property="Income_Detail-income"/>
  <Ecore:EClass xmi:id="_153" base_Class="FromLaw"/>
  <Ecore:EReference xmi:id="_154" base_Property="FromLaw-taxPayer"/>
  <Ecore:EOperation xmi:id="_155" base_Operation="FromLaw-CE_INVALIDITY_FLAT_RATE_TYPE_E"/>
  <Ecore:EOperation xmi:id="_156" base_Operation="FromLaw-CIP_MINIMUM_INCOME_MONTH"/>
  <Ecore:EOperation xmi:id="_157" base_Operation="FromLaw-CIP_MINIMUM_INCOME_YEAR"/>
  <Ecore:EOperation xmi:id="_158" base_Operation="FromLaw-FLAT_RATE_CIP_YEARLY"/>
  <Ecore:EOperation xmi:id="_159" base_Operation="FromLaw-FLAT_RATE_PER_UNIT"/>
  <Ecore:EOperation xmi:id="_160" base_Operation="FromLaw-MAXIMUM_DISTANCE_IN_UNITS"/>
  <Ecore:EOperation xmi:id="_161" base_Operation="FromLaw-MINIMUM_DISTANCE_IN_UNITS"/>
  <Ecore:EOperation xmi:id="_162" base_Operation="FromLaw-FLAT_MAXIMUM_FD"/>
  <Ecore:EOperation xmi:id="_163" base_Operation="FromLaw-CIS_MINIMUM_INCOME_DAY"/>
  <Ecore:EOperation xmi:id="_164" base_Operation="FromLaw-CIS_MINIMUM_INCOME_MONTH"/>
  <Ecore:EOperation xmi:id="_165" base_Operation="FromLaw-CIS_MINIMUM_INCOME_YEAR"/>
  <Ecore:EOperation xmi:id="_166" base_Operation="FromLaw-FLAT_RATE_CIS_DAILY"/>
  <Ecore:EOperation xmi:id="_167" base_Operation="FromLaw-FLAT_RATE_CIS_MONTHLY"/>
  <Ecore:EOperation xmi:id="_168" base_Operation="FromLaw-FLAT_RATE_CIS_YEARLY"/>
  <Ecore:EClass xmi:id="_169" base_Class="FromAgent"/>
  <Ecore:EReference xmi:id="_170" base_Property="FromAgent-taxPayer"/>
  <Ecore:EClass xmi:id="_171" base_Class="Fiscal_Address"/>
  <Ecore:EClass xmi:id="_172" base_Class="Habitual_Address"/>
  <Ecore:EClass xmi:id="_173" base_Class="Marriage_Record"/>
  <Ecore:EClass xmi:id="_174" base_Class="Non_Resident_Tax_Payer"/>
  <Ecore:EClass xmi:id="_175" base_Class="Partnership_Record"/>
  <Ecore:EClass xmi:id="_176" base_Class="Resident_Tax_Payer"/>
  <Ecore:EClass xmi:id="_177" base_Class="Trade_and_Business_Income"/>
  <Ecore:EClass xmi:id="_178" base_Class="Agriculture_and_Forestry_Income"/>
  <Ecore:EClass xmi:id="_180" base_Class="Pensions_and_Annuities_Income"/>
  <Ecore:EClass xmi:id="_181" base_Class="Capital_and_Investments_Income"/>
  <Ecore:EClass xmi:id="_182" base_Class="Employment_Income"/>
  <Ecore:EClass xmi:id="_183" base_Class="Rentals_and_Leases_Income"/>
  <Ecore:EClass xmi:id="_186" base_Class="Foreign_Income"/>
  <Ecore:EClass xmi:id="_187" base_Class="Local_Income"/>
  <Ecore:EClass xmi:id="_188" base_Class="CIM"/>
  <Ecore:EClass xmi:id="_189" base_Class="CIP"/>
  <Ecore:EClass xmi:id="_190" base_Class="CIS"/>
  <Ecore:EClass xmi:id="_191" base_Class="FD"/>
  <Ecore:EOperation xmi:id="_192" base_Operation="FD-compute_distance_unit_between_home_and_workpalce"/>
  <Ecore:EClass xmi:id="_193" base_Class="Professional_Expenses_Deduction"/>
  <Ecore:EClass xmi:id="_194" base_Class="FO"/>
  <Ecore:EOperation xmi:id="_195" base_Operation="FO-compute_disability_flat_rate"/>
  <Ecore:EOperation xmi:id="_196" base_Operation="FO-compute_regular_flat_rate"/>
  <Ecore:EClass xmi:id="_203" base_Class="DS_for_Permanent_Expense"/>
  <Ecore:EClass xmi:id="_204" base_Class="DS"/>
  <Ecore:EEnum xmi:id="_205" base_Enumeration="Category_of_Permanent_Expense"/>
  <Ecore:EEnumLiteral xmi:id="_206" base_EnumerationLiteral="Category_of_Permanent_Expense-MISCELLANEOUS_DEBT" literal="MISCELLANEOUS_DEBT"/>
  <Ecore:EEnumLiteral xmi:id="_207" base_EnumerationLiteral="Category_of_Permanent_Expense-ALIMONY" literal="ALIMONY"/>
  <Ecore:EClass xmi:id="_208" base_Class="DS_for_Interest_Expense"/>
  <Ecore:EOperation xmi:id="_209" base_Operation="DS_for_Interest_Expense-compute_maximum_deductible_amount"/>
  <Ecore:EParameter xmi:id="_210" base_Parameter="DS_for_Interest_Expense-compute_maximum_deductible_amount-IN_children_with_allowances"/>
  <Ecore:EParameter xmi:id="_211" base_Parameter="DS_for_Interest_Expense-compute_maximum_deductible_amount-IN_legal_union"/>
  <Ecore:EClass xmi:id="_212" base_Class="DS_for_Health_and_Pension_Insurance"/>
  <Ecore:EEnum xmi:id="_213" base_Enumeration="Category_of_Health_and_Pension_Insurances"/>
  <Ecore:EEnumLiteral xmi:id="_214" base_EnumerationLiteral="Category_of_Health_and_Pension_Insurances-MANDATORY_HEALTH_AND_PENSION_INSURANCE" literal="MANDATORY_HEALTH_AND_PENSION_INSURANCE"/>
  <Ecore:EEnumLiteral xmi:id="_215" base_EnumerationLiteral="Category_of_Health_and_Pension_Insurances-ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" literal="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE"/>
  <Ecore:EEnumLiteral xmi:id="_216" base_EnumerationLiteral="Category_of_Health_and_Pension_Insurances-CONTINUED_HEALTH_AND_PENSION_INSURANCE" literal="CONTINUED_HEALTH_AND_PENSION_INSURANCE"/>
  <Ecore:EClass xmi:id="_217" base_Class="DS_for_Private_Insurance_and_Plan"/>
  <Ecore:EOperation xmi:id="_218" base_Operation="DS_for_Private_Insurance_and_Plan-compute_increase_for_life_insurance"/>
  <Ecore:EOperation xmi:id="_219" base_Operation="DS_for_Private_Insurance_and_Plan-compute_maximum_deductible_amount_for_private_insruance"/>
  <Ecore:EOperation xmi:id="_220" base_Operation="DS_for_Private_Insurance_and_Plan-compute_maximum_deductible_amount_for_old_age_pension_plan"/>
  <Ecore:EEnum xmi:id="_221" base_Enumeration="Category_of_Private_Insurance_and_Plan"/>
  <Ecore:EEnumLiteral xmi:id="_222" base_EnumerationLiteral="Category_of_Private_Insurance_and_Plan-PRIVATE_INSURANCE" literal="PRIVATE_INSURANCE"/>
  <Ecore:EEnumLiteral xmi:id="_223" base_EnumerationLiteral="Category_of_Private_Insurance_and_Plan-PRIVATE_LIFE_INSURANCE" literal="PRIVATE_LIFE_INSURANCE"/>
  <Ecore:EEnumLiteral xmi:id="_224" base_EnumerationLiteral="Category_of_Private_Insurance_and_Plan-COMPANY_MEMBERS_PRIVATE_INSURANCE" literal="COMPANY_MEMBERS_PRIVATE_INSURANCE"/>
  <Ecore:EEnumLiteral xmi:id="_225" base_EnumerationLiteral="Category_of_Private_Insurance_and_Plan-HOUSING_SAVING_PLAN" literal="HOUSING_SAVING_PLAN"/>
  <Ecore:EEnumLiteral xmi:id="_226" base_EnumerationLiteral="Category_of_Private_Insurance_and_Plan-OLD_AGE_PENSION_PLAN" literal="OLD_AGE_PENSION_PLAN"/>
  <Ecore:EClass xmi:id="_227" base_Class="DS_for_Loss_Carryforward"/>
  <Ecore:EClass xmi:id="_228" base_Class="DS_for_Donation"/>
  <Ecore:EClass xmi:id="_229" base_Class="Permanent_Expense"/>
  <Ecore:EOperation xmi:id="_230" base_Operation="Permanent_Expense-is_expense_eligible_for_deduction"/>
  <Ecore:EParameter xmi:id="_231" base_Parameter="Permanent_Expense-is_expense_eligible_for_deduction-IN_agent_response"/>
  <Ecore:EClass xmi:id="_232" base_Class="Special_Expense_DS"/>
  <Ecore:EClass xmi:id="_233" base_Class="Interest_Expense"/>
  <Ecore:EClass xmi:id="_234" base_Class="Private_Insurance_and_Plan"/>
  <Ecore:EOperation xmi:id="_235" base_Operation="Private_Insurance_and_Plan-is_private_insurance_and_plan_eligible_for_deduction.1"/>
  <Ecore:EClass xmi:id="_236" base_Class="Health_and_Pension_Insurance"/>
  <Ecore:EClass xmi:id="_237" base_Class="Donation"/>
  <Ecore:EOperation xmi:id="_238" base_Operation="Donation-get_beneficiary_eligibility_for_deduction"/>
  <Ecore:EClass xmi:id="_239" base_Class="Loss_Carryforward"/>
  <Ecore:EOperation xmi:id="_240" base_Operation="Loss_Carryforward-is_accountability_regular"/>
  <Ecore:EOperation xmi:id="_241" base_Operation="Loss_Carryforward-is_compensated_by_other_means"/>
  <Ecore:EOperation xmi:id="_242" base_Operation="Loss_Carryforward-has_been_tax_payer_partner_in_business"/>
  <Ecore:EOperation xmi:id="_243" base_Operation="Loss_Carryforward-has_tax_payer_inherited_business_ownership"/>
  <Ecore:EClass xmi:id="_244" base_Class="Spousal_Expense_AC"/>
  <Ecore:EClass xmi:id="_245" base_Class="Extraordinary_Expense_CE"/>
  <Ecore:EOperation xmi:id="_246" base_Operation="Extraordinary_Expense_CE-is_above_thresholded_deduction_percentage_for_CE"/>
  <Ecore:EOperation xmi:id="_247" base_Operation="Extraordinary_Expense_CE-compute_thresholded_deduction_percentage_for_CE"/>
  <Ecore:EParameter xmi:id="_248" base_Parameter="Extraordinary_Expense_CE-compute_thresholded_deduction_percentage_for_CE-IN_thresholded_deduction_percentage"/>
  <Ecore:EClass xmi:id="_249" base_Class="Travel_Expense_FD"/>
  <Ecore:EClass xmi:id="_250" base_Class="Professional_Expense"/>
  <Ecore:EClass xmi:id="_251" base_Class="Miscellaneous_Expense_FO"/>
  <Ecore:EEnumLiteral xmi:id="_2f6G8H_MEeSKo9E5ldkH6Q" base_EnumerationLiteral="_z-prIH_MEeSKo9E5ldkH6Q"/>
  <Ecore:EEnumLiteral xmi:id="_2jM5QH_REeSKo9E5ldkH6Q" base_EnumerationLiteral="_lbDFgH_REeSKo9E5ldkH6Q"/>
  <Ecore:EClass xmi:id="_RwuG4IXaEeSLiOAbrK2uyQ" base_Class="_0yLxwIH5EeSH_sby466C_w"/>
  <Ecore:EEnum xmi:id="_TppXYIXaEeSLiOAbrK2uyQ" base_Enumeration="_7auHsIOIEeSemtkAhxylbQ"/>
  <Ecore:EEnum xmi:id="_UvsZcIXaEeSLiOAbrK2uyQ" base_Enumeration="_dTr3IIOSEeSemtkAhxylbQ"/>
  <Ecore:EClass xmi:id="_kJjuUIX5EeSLiOAbrK2uyQ" base_Interface="_1gja4IXvEeSLiOAbrK2uyQ"/>
  <Ecore:EEnumLiteral xmi:id="_HQFEUJA7EeS9qe9Ea8KYvA" base_EnumerationLiteral="_h4BBsJA6EeSrKuFMY7nEzg"/>
  <Ecore:EEnumLiteral xmi:id="_UmboEJN1EeSS6JjHMC2a3A" base_EnumerationLiteral="_O-S64JN1EeSS6JjHMC2a3A"/>
  <Ecore:EEnumLiteral xmi:id="_swBW0JQ8EeSMZqrJQmR94g" base_EnumerationLiteral="_qE9ewJQ8EeSMZqrJQmR94g"/>
</xmi:XMI>
